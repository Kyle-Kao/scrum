{"version":3,"file":"static/js/231.5a11564f.chunk.js","mappings":"iGAMAA,EAAOC,QAAU,SAASC,EAAMC,EAAGC,GACjC,GAAID,IAAMC,EAAG,OAAO,EAEpB,GAAID,GAAKC,GAAiB,iBAALD,GAA6B,iBAALC,EAAe,CAC1D,GAAID,EAAEE,cAAgBD,EAAEC,YAAa,OAAO,EAE5C,IAAIC,EAAQC,EAAGC,EACf,GAAIC,MAAMC,QAAQP,GAAI,CAEpB,IADAG,EAASH,EAAEG,SACGF,EAAEE,OAAQ,OAAO,EAC/B,IAAKC,EAAID,EAAgB,IAARC,KACf,IAAKL,EAAMC,EAAEI,GAAIH,EAAEG,IAAK,OAAO,EACjC,OAAO,CACT,CAIA,GAAIJ,EAAEE,cAAgBM,OAAQ,OAAOR,EAAES,SAAWR,EAAEQ,QAAUT,EAAEU,QAAUT,EAAES,MAC5E,GAAIV,EAAEW,UAAYC,OAAOC,UAAUF,QAAS,OAAOX,EAAEW,YAAcV,EAAEU,UACrE,GAAIX,EAAEc,WAAaF,OAAOC,UAAUC,SAAU,OAAOd,EAAEc,aAAeb,EAAEa,WAIxE,IADAX,GADAE,EAAOO,OAAOP,KAAKL,IACLG,UACCS,OAAOP,KAAKJ,GAAGE,OAAQ,OAAO,EAE7C,IAAKC,EAAID,EAAgB,IAARC,KACf,IAAKQ,OAAOC,UAAUE,eAAeC,KAAKf,EAAGI,EAAKD,IAAK,OAAO,EAEhE,IAAKA,EAAID,EAAgB,IAARC,KAAY,CAC3B,IAAIa,EAAMZ,EAAKD,GAEf,IAAKL,EAAMC,EAAEiB,GAAMhB,EAAEgB,IAAO,OAAO,CACrC,CAEA,OAAO,CACT,CAGA,OAAOjB,IAAIA,GAAKC,IAAIA,CACtB,C,uBClCO,SAASiB,EAAUC,EAAgBC,GAAgC,QAAAC,EAAAC,UAAAnB,OAAboB,EAAI,IAAAjB,MAAAe,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJD,EAAIC,EAAA,GAAAF,UAAAE,GAChE,GA8BoB,qBAAZC,cA7BQC,IAAXN,EACH,MAAM,IAAIO,MAAM,gDAIlB,IAAKR,EAAW,CACf,IAAIS,EACJ,QAAeF,IAAXN,EACHQ,EAAQ,IAAID,MACX,qIAGK,CACN,IAAIE,EAAW,GACfD,EAAQ,IAAID,MACXP,EAAOU,QAAQ,OAAO,WACrB,OAAOP,EAAKM,I,MAGRE,KAAO,qB,CAId,MADCH,EAAeI,YAAc,EACxBJ,C,uDCpCD,SAASK,EACfC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAgBF,EACjBA,EAAQpB,KAAKqB,EAAgBH,EAAMC,QACnC,EACH,QAAsB,IAAlBG,EACH,QAASA,EAGV,GAAIJ,IAASC,EACZ,OAAO,EAGR,GAAoB,kBAATD,IAAsBA,GAAwB,kBAATC,IAAsBA,EACrE,OAAO,EAGR,IAAMI,EAAQ3B,OAAOP,KAAK6B,GACpBM,EAAQ5B,OAAOP,KAAK8B,GAE1B,GAAII,EAAMpC,SAAWqC,EAAMrC,OAC1B,OAAO,EAMR,IAHA,IAAMsC,EAAkB7B,OAAOC,UAAUE,eAAe2B,KAAKP,GAGpDQ,EAAM,EAAGA,EAAMJ,EAAMpC,OAAQwC,IAAO,CAC5C,IAAM1B,EAAMsB,EAAMI,GAElB,IAAKF,EAAgBxB,GACpB,OAAO,EAGR,IAAM2B,EAASV,EAAcjB,GACvB4B,EAASV,EAAclB,GAM7B,IACmB,KALnBqB,EAAgBF,EACbA,EAAQpB,KAAKqB,EAAgBO,EAAQC,EAAQ5B,QAC7C,SAIiB,IAAlBqB,GAA4BM,IAAWC,EAExC,OAAO,C,CAIT,OAAO,C,gPCnDD,SAASC,EAAWC,GAC1B,IAAIC,EAAmB,KAOvB,OANiB,WAIhB,OAHc,MAAVA,IACHA,EAASD,KAEHC,C,ECJF,I,EAAMC,EAAiB,WAI7B,SAAAA,EAAmBC,IAAiCC,EAAAA,EAAAA,GAAA,KAAAF,GAHpD,KAAQG,QAAiB,GAIxBC,KAAKH,iBAAmBA,C,CA4BxB,OA3BAI,EAAAA,EAAAA,GAAAL,EAAA,EAAAhC,IAAA,QAAAsC,MAED,SAAaC,GAA2C,IAAAC,EAAA,KACjDC,EAAiBL,KAAKD,QAAQjD,OAQpC,OAFAkD,KAAKD,QDCA,SAA0CO,EAAaC,GAC7D,IAAMC,EAAM,IAAIC,IACVC,EAAa,SAACC,GAAO,OAAKH,EAAII,IAAID,EAAK,EAC7CL,EAAOO,QAAQH,GACfH,EAAOM,QAAQH,GAEf,IAAMf,EAAc,GAEpB,OADAa,EAAIK,SAAQ,SAACjD,GAAG,OAAK+B,EAAOmB,KAAKlD,EAAI,IAC9B+B,C,CCTSoB,CAAMf,KAAKD,QAAQiB,QAJZ,SAACC,GAAU,OAChCb,EAAKP,iBAAiBoB,MACpBA,EAAKC,UAAYD,EAAKC,SAASf,GAAsB,IAEC,CAACA,IAEhC,IAAnBE,GAAwBL,KAAKD,QAAQjD,OAAS,C,GACrD,CAAAc,IAAA,QAAAsC,MAED,SAAaiB,GACZ,IDTyBC,EAAYT,ECS/BN,EAAiBL,KAAKD,QAAQjD,OAOpC,OALAkD,KAAKD,SDXoBqB,ECYxBpB,KAAKD,QAAQiB,OAAOhB,KAAKH,kBDZWc,ECapCQ,EDZKC,EAAMJ,QAAO,SAACjE,GAAC,OAAKA,IAAM4D,CAAI,KCe7BN,EAAiB,GAA6B,IAAxBL,KAAKD,QAAQjD,M,GAC1C,CAAAc,IAAA,QAAAsC,MAED,WACCF,KAAKD,QAAU,E,KACfH,CAAA,CAjC4B,GCAjByB,EAAgB,WAI5B,SAAAA,EAAmBC,IAA0BxB,EAAAA,EAAAA,GAAA,KAAAuB,GAC5CrB,KAAKsB,OAASA,EACdtB,KAAKW,KAAO,CAAC,EACbX,KAAKuB,6B,CAkDL,OAjDAtB,EAAAA,EAAAA,GAAAoB,EAAA,EAAAzD,IAAA,8BAAAsC,MAED,WAAsC,IAAAE,EAAA,KACrC7C,OAAOP,KAAKgD,KAAKsB,OAAOE,kBAAkBX,SAAQ,SAACY,GAClDlE,OAAOmE,eAAetB,EAAKO,KAAMc,EAAU,CAC1CE,cAAc,EACdC,YAAY,EACZC,IAAG,WAKF,OAHAC,QAAQC,KAAK,mCAADC,OACuBP,EAAQ,4BAEpC,I,SAIV,CAAA7D,IAAA,mBAAAsC,MAED,SAAwB+B,GAAqD,IAAAC,EAAA,KAC5E,GAAID,EAAc,CACjB,IAAME,EAAuC,CAAC,EAC9C5E,OAAOP,KAAKgD,KAAKsB,OAAOE,kBAAkBX,SAAQ,SAACY,GAClD,IAAMW,EAAaF,EAAKZ,OAAOE,iBAAiBC,GAC9B,MAAdW,IACHD,EAAcV,GAAY,CACzBvB,MAAOkC,EAAWH,EAAcC,EAAKZ,OAAOe,cAC5CV,cAAc,EACdC,YAAY,G,IAIfrE,OAAO+E,iBAAiBtC,KAAKW,KAAMwB,E,IAEpC,CAAAvE,IAAA,UAAAsC,MAED,WACC,OAAO,C,GACP,CAAAtC,IAAA,YAAAsC,MAED,WACC,OAAOF,KAAKW,I,GACZ,CAAA/C,IAAA,aAAAsC,MAED,SAAkBqC,EAA0BC,GAC3C,OAAOA,IAAWD,EAAQE,a,GAC1B,CAAA7E,IAAA,UAAAsC,MAED,WACC,KACAmB,CAAA,CAzD2B,G,UCJhBqB,EAAO,kBACPC,EAAM,iBACNC,EAAO,kBACPC,EAAO,kBCHb,SAASC,EACfb,EACAc,EACAC,GAEA,IAAMrD,EAASoD,EAAWE,QACzB,SAACC,EAAaC,GAAS,OAAKD,GAAejB,EAAamB,QAAQD,EAAU,GAC1E,IAGD,OAAiB,MAAVxD,EAAiBA,EAASqD,C,CCK3B,IAAMK,GAAiBC,EAAA,IAAAC,EAAAA,EAAAA,GAAAD,EAG5BE,EAAmB,CACnBhC,iBAAkB,CACjBiC,MAAO,SAACxB,GAA0B,OACjChF,MAAMO,UAAUkG,MAAM/F,KAAKsE,EAAawB,MAAM,EAC/CrC,MAAO,SAACa,GAA0B,OACjCA,EAAab,KAAK,EACnBa,aAAc,SAACA,GAA0B,OAAmBA,CAAY,GAEzEI,aAAc,CAAC,YACfkB,EAAAA,EAAAA,GAAAD,EACAE,EAAmB,CACnBhC,iBAAkB,CACjBmC,KAAM,SAAC1B,EAA4BI,GAAsB,OACxDS,EAAwBb,EAAcI,EAAc,GAAG,EACxDJ,aAAc,SAACA,GAA0B,OAAmBA,CAAY,GAEzEI,aAAc,CAAC,OAAQ,gBACvBkB,EAAAA,EAAAA,GAAAD,EACAE,EAAkB,CAClBhC,iBAAkB,CACjBoC,KAAM,SAAC3B,EAA4BI,GAAsB,OACxDS,EAAwBb,EAAcI,EAAc,IAAIwB,MAAM,KAAK,EACpE5B,aAAc,SAACA,GAA0B,OAAmBA,CAAY,GAEzEI,aAAc,CAAC,MAAO,oBACtBkB,EAAAA,EAAAA,GAAAD,EACAE,EAAmB,CACnBhC,iBAAkB,CACjBsC,KAAM,SAAC7B,EAA4BI,GAAsB,OACxDS,EAAwBb,EAAcI,EAAc,GAAG,EACxDJ,aAAc,SAACA,GAA0B,OAAmBA,CAAY,GAEzEI,aAAc,CAAC,OAAQ,gBACvBiB,GCnCK,SAASS,EACf9B,GAEA,IAAKA,EACJ,OAAO,KAGR,IAAM+B,EAAoB/G,MAAMO,UAAUkG,MAAM/F,KAAKsE,EAAagC,OAAS,IAC3E,OACC1G,OAAOP,KAAKqG,GAAmBrC,QAAO,SAACkD,GACtC,IAAMC,EAAad,EAAkBa,GACrC,SAAe,OAAVC,QAAU,IAAVA,OAAA,EAAAA,EAAY9B,eAGV8B,EAAW9B,aAAa+B,MAC9B,SAACC,GAAC,OAAKL,EAAkBM,QAAQD,IAAM,CAAC,G,IAEvC,IAAM,I,CCxBJ,IAAME,EAAuB9E,GAAQ,iBAC3C,WAAW+E,KAAKC,UAAUC,UAAU,IAExBC,EAAsBlF,GAAQ,kBAAMmF,QAAQC,OAAOC,OAAO,ICZ1DC,EAAoB,WAOhC,SAAAA,EAAmBC,EAAcC,IAAcnF,EAAAA,EAAAA,GAAA,KAAAiF,GAK9C,IAJA,IAAQjI,EAAWkI,EAAXlI,OAGFoI,EAAU,GACPnI,EAAI,EAAGA,EAAID,EAAQC,IAC3BmI,EAAQpE,KAAK/D,GAEdmI,EAAQC,MAAK,SAACxI,EAAGC,GAAC,OAAMoI,EAAIrI,GAAiBqI,EAAGpI,IAAiB,EAAI,CAAC,IAQtE,IALA,IAGIwI,EACAC,EAJEC,EAAM,GACNC,EAAM,GACNC,EAAK,GAGFC,EAAI,EAAGA,EAAI3I,EAAS,EAAG2I,IAC/BL,EAAKJ,EAAIS,EAAI,GAAiBT,EAAGS,GACjCJ,EAAKJ,EAAIQ,EAAI,GAAiBR,EAAGQ,GACjCF,EAAIzE,KAAKsE,GACTE,EAAIxE,KAAKuE,GACTG,EAAG1E,KAAKuE,EAAKD,GAKd,IADA,IAAMM,EAAM,CAACF,EAAG,IACPG,EAAI,EAAGA,EAAIJ,EAAIzI,OAAS,EAAG6I,IAAK,CACxC,IAAMC,EAAKJ,EAAGG,GACRE,EAAQL,EAAGG,EAAI,GACrB,GAAIC,EAAKC,GAAS,EACjBH,EAAI5E,KAAK,OACH,CACNsE,EAAKG,EAAII,GACT,IAAMG,EAASP,EAAII,EAAI,GACjBI,EAASX,EAAKU,EACpBJ,EAAI5E,KACH,EAAKiF,IAAYA,EAASD,GAAUF,GAAMG,EAASX,GAAMS,G,EAI5DH,EAAI5E,KAAK0E,EAAGA,EAAG1I,OAAS,IAMxB,IAHA,IAEIkJ,EAFEC,EAAM,GACNC,EAAM,GAEHC,EAAI,EAAGA,EAAIT,EAAI5I,OAAS,EAAGqJ,IAAK,CACxCH,EAAIR,EAAGW,GACP,IAAMC,EAAKV,EAAIS,GACTE,EAAQ,EAAKd,EAAIY,GACjBJ,EAASK,EAAMV,EAAIS,EAAI,GAAgBH,EAAIA,EACjDC,EAAInF,MAAMkF,EAAII,EAAKL,GAAUM,GAC7BH,EAAIpF,KAAKiF,EAASM,EAAQA,E,CAG3BrG,KAAKgF,GAAKA,EACVhF,KAAKiF,GAAKA,EACVjF,KAAK0F,IAAMA,EACX1F,KAAKiG,IAAMA,EACXjG,KAAKkG,IAAMA,C,CAiCX,OAhCAjG,EAAAA,EAAAA,GAAA8E,EAAA,EAAAnH,IAAA,cAAAsC,MAED,SAAmBoG,GAClB,IAAQtB,EAA0BhF,KAA1BgF,GAAIC,EAAsBjF,KAAtBiF,GAAIS,EAAkB1F,KAAlB0F,IAAKO,EAAajG,KAAbiG,IAAKC,EAAQlG,KAARkG,IAGtBnJ,EAAIiI,EAAGlI,OAAS,EACpB,GAAIwJ,IAAMtB,EAAGjI,GACZ,OAAOkI,EAAGlI,GAOX,IAHA,IAEIwJ,EAFAC,EAAM,EACNC,EAAOP,EAAIpJ,OAAS,EAEjB0J,GAAOC,GAAM,CAEnB,IAAMC,EAAQ1B,EADduB,EAAMI,KAAKC,MAAM,IAAOJ,EAAMC,KAE9B,GAAIC,EAAQJ,EACXE,EAAMD,EAAM,MACN,MAAIG,EAAQJ,GAGlB,OAAOrB,EAAGsB,GAFVE,EAAOF,EAAM,C,EAQf,IAAMM,EAAOP,EAAItB,EAHjBjI,EAAI4J,KAAKG,IAAI,EAAGL,IAIVM,EAASF,EAAOA,EACtB,OAAO5B,EAAGlI,GAAK2I,EAAI3I,GAAK8J,EAAOZ,EAAIlJ,GAAKgK,EAASb,EAAInJ,GAAK8J,EAAOE,C,KACjEhC,CAAA,CAnG+B,GCK3BiC,EAAe,EAEd,SAASC,EAAoBhG,GACnC,IAAMiG,EAAKjG,EAAKkG,WAAaH,EAAe/F,EAAOA,EAAKmG,cAExD,IAAKF,EACJ,OAAO,KAGR,IAAAG,EAAsBH,EAAoBI,wBAAlCC,EAAGF,EAAHE,IACR,MAAO,CAAEjB,EADQe,EAAJG,KACKC,EAAGF,E,CAGf,SAASG,EAAqBC,GACpC,MAAO,CACNrB,EAAGqB,EAAEC,QACLH,EAAGE,EAAEE,Q,CA4BA,SAASC,EACfC,EACAC,EACAC,EACAC,EACAC,GAIA,IAAMC,EAjCP,SAAqBnH,G,IAGFoH,EAFlB,MACmB,QAAlBpH,EAAKqH,WACJ/D,OAAwC,QAAxB8D,EAAAE,SAASC,uBAAe,IAAxBH,OAAA,EAAAA,EAA0BnH,SAASD,I,CA8BrCwH,CAAYT,GAEtBU,EAAkCzB,EADhBmB,EAAUL,EAAaC,GAIzCW,EAAwB,CAC7BrC,EAAG2B,EAAa3B,EAAIoC,EAAgCpC,EACpDmB,EAAGQ,EAAaR,EAAIiB,EAAgCjB,GAEhCmB,EAA4Cb,EAAzDc,YAAwCC,EAAiBf,EAA/BgB,aAC1BC,EAAqBd,EAArBc,QAASC,EAAYf,EAAZe,QACjBC,EArCD,SACCd,EACAJ,EACAY,EACAE,GAEA,IAAIK,EAAmBf,EAAUJ,EAAYoB,MAAQR,EACjDS,EAAoBjB,EAAUJ,EAAYsB,OAASR,EAOvD,OAJInE,KAAcyD,IACjBiB,GAAqBxE,OAAO0E,iBAC5BJ,GAAoBtE,OAAO0E,kBAErB,CAAEJ,iBAAAA,EAAkBE,kBAAAA,E,CAuBqBG,CAC/CpB,EACAJ,EACAY,EACAE,GAJOK,EAAgBD,EAAhBC,iBAAkBE,EAAiBH,EAAjBG,kBA8ClBI,EAAqBtB,EAArBsB,QAASC,EAAYvB,EAAZuB,QAEXC,EAA8B,IAAZD,GAAiBA,EACzC,MAAO,CACNpD,EAHmC,IAAZmD,GAAiBA,EAGnBA,EAnBA,IAAI1E,EACxB,CAAC,EAAG,GAAK,GACT,CAEC4D,EAAsBrC,EAErBqC,EAAsBrC,EAAIsC,EAAeO,EAE1CR,EAAsBrC,EAAI6C,EAAmBP,IAG3BgB,YAAYZ,GAShCvB,EAAGkC,EAAkBD,EA5CG,WACxB,IAWIjC,EAXiB,IAAI1C,EACxB,CAAC,EAAG,GAAK,GACT,CAEC4D,EAAsBlB,EAErBkB,EAAsBlB,EAAIqB,EAAgBO,EAE3CV,EAAsBlB,EAAI4B,EAAoBP,IAG3Bc,YAAYX,GAMjC,OAJItE,KAAcyD,IAEjBX,IAAM5C,OAAO0E,iBAAmB,GAAKF,GAE/B5B,C,CA0BwBoC,G,CCtH1B,IAAMC,EAAa,WAKzB,SAAAA,EACCC,EACAC,IACClK,EAAAA,EAAAA,GAAA,KAAAgK,GAPF,KAAOG,cAAiC,KAQvCjK,KAAK+J,cAAgBA,EACrB/J,KAAKkK,YAAcF,C,CAwBnB,OAvBA/J,EAAAA,EAAAA,GAAA6J,EAAA,EAAAlM,IAAA,SAAAiE,IAED,WACC,OAAI7B,KAAK+J,cACD/J,KAAK+J,cACgB,qBAAXlF,OACVA,YADD,C,GAIP,CAAAjH,IAAA,WAAAiE,IAED,W,IACKwG,EAAJ,OAAsB,QAAlBA,EAAArI,KAAK+J,qBAAa,IAAlB1B,OAAA,EAAAA,EAAoBE,UAChBvI,KAAK+J,cAAcxB,SAChBvI,KAAK6E,OACR7E,KAAK6E,OAAO0D,cAEnB,C,GAED,CAAA3K,IAAA,cAAAiE,IAED,W,IACQwG,EAAP,OAAuB,QAAhBA,EAAArI,KAAKkK,mBAAW,IAAhB7B,OAAA,EAAAA,EAAkB8B,cAAenK,KAAK6E,M,KAC7CiF,CAAA,CAlCwB,GCF1B,SAAAvG,EAAA6G,EAAAxM,EAAAsC,G,+aA4BO,IAAMmK,EAAgB,WA8B5B,SAAAA,EACCC,EACAP,EACAC,GACC,IAAA5J,EAAA,MAAAN,EAAAA,EAAAA,GAAA,KAAAuK,GAvBF,KAAQE,mBAA2C,IAAIC,IACvD,KAAQC,yBAA6C,IAAID,IACzD,KAAQE,YAAoC,IAAIF,IAChD,KAAQG,kBAAsC,IAAIH,IAElD,KAAQI,mBAAsC,KAC9C,KAAQC,cAA0B,GAClC,KAAQC,mBAA+B,GACvC,KAAQC,oBAA+C,KACvD,KAAQC,oBAAyC,KACjD,KAAQC,sBAAwC,KAChD,KAAQC,eAAgB,EACxB,KAAQC,sBAAuC,KAC/C,KAAQC,oBAAqC,KAC7C,KAAQC,kBAAqC,KAE7C,KAAQC,iBAAmC,KAC3C,KAAQC,WAA4B,KA+OpC,KAAQC,sBAAwB,SAACC,GAChC,IAAMrO,EAASgD,EAAKsK,YAAY7I,IAAI4J,GACpC,OAAOrO,GAAW6J,EAAoB7J,IAA2B,I,EAqBlE,KAAQsO,kBAAoB,WACtBtL,EAAKuL,yBAIVvL,EAAKwL,QAAQC,UACTzL,EAAK4K,qBACR5K,EAAK0L,SAASC,aAAa3L,EAAK4K,qBAEjC5K,EAAK4K,oBAAsB,KAC3B5K,EAAK2K,oBAAsB,K,EAG5B,KAAQlL,iBAAmB,SAACoB,GAE3B,OAAO2D,QACN3D,GACCb,EAAKmI,UACLnI,EAAKmI,SAASyD,MACd5L,EAAKmI,SAASyD,KAAK9K,SAASD,G,EAI/B,KAAQgL,iCAAmC,WAC1C,IAAMhL,EAAOb,EAAK6K,sBACN,MAARhK,GAAgBb,EAAKP,iBAAiBoB,KAItCb,EAAK8L,8BAAgC9L,EAAKmC,QAAQ4J,cACrD/L,EAAKwL,QAAQC,UAEdzL,EAAKgM,c,EAsDN,KAAQC,cAAgB,SAAChB,GAEH,OAApBjL,EAAKmL,YAC4B,qBAA1Be,wBAEPlM,EAAKmL,WAAae,uBAAsB,WACnClM,EAAKmC,QAAQ4J,cAChB/L,EAAKwL,QAAQW,MAAMlB,GAAqB,GAAI,CAC3CpD,aAAc7H,EAAKkL,mBAIrBlL,EAAKmL,WAAa,I,MAKrB,KAAQa,YAAc,WAEA,OAApBhM,EAAKmL,YAC2B,qBAAzBiB,uBAEPA,qBAAqBpM,EAAKmL,YAC1BnL,EAAKmL,WAAa,K,EAIpB,KAAOkB,0BAA4B,WAClCrM,EAAK8L,6BACL9L,EAAKwK,mBAAqB,E,EAc3B,KAAO8B,mBAAqB,SAAC/E,GAC5B,IAAIA,EAAEgF,iBAAN,CAIA,IAAQ/B,EAAuBxK,EAAvBwK,mBACRxK,EAAKwK,mBAAqB,KAE1B,IAAM3C,EAAeP,EAAqBC,GAGtCvH,EAAKmC,QAAQ4J,eAChB/L,EAAKwL,QAAQC,UACbzL,EAAKgM,eAINhM,EAAKwL,QAAQgB,UAAUhC,GAAsB,GAAI,CAChDiC,eAAe,EACfrB,sBAAuBpL,EAAKoL,sBAC5BvD,aAAAA,IAGD,IAAQhG,EAAiB0F,EAAjB1F,aACF6K,EAAa/I,EAAoB9B,GAEvC,GAAI7B,EAAKmC,QAAQ4J,aAAc,CAC9B,GAAIlK,GAAqD,oBAA9BA,EAAa8K,aAA6B,CAIpE,IAAMtB,EAAmBrL,EAAKmC,QAAQE,cAChCsF,EAAa3H,EAAKsK,YAAY7I,IAAI4J,GAClCzD,EAAc5H,EAAKmK,mBAAmB1I,IAAI4J,IAAa1D,EAE7D,GAAIC,EAAa,CAChB,IAAAgF,EACC5M,EAAK6M,qCAGAC,EAAoBpF,EACzBC,EACAC,EACAC,EALmB,CAAEe,QAFPgE,EAAPhE,QAEuBC,QAFP+D,EAAP/D,SAGG,CAAEQ,QAHWuD,EAAPvD,QAGKC,QAHWsD,EAAPtD,UAYnCzH,EAAa8K,aACZ/E,EACAkF,EAAkB5G,EAClB4G,EAAkBzF,E,EAKrB,IAEa,OAAZxF,QAAY,IAAZA,GAAAA,EAAckL,QAAQ,mBAAoB,CAAC,E,CAC1C,MAAOC,GACR,CAKDhN,EAAKiN,yBAAyB1F,EAAE2F,QAGClN,EAAK6M,qCAA9BM,qBAmBPnN,EAAKwL,QAAQ4B,oBAZbC,YAAW,kBAAMrN,EAAKwL,QAAQ4B,mBAAmB,GAAE,E,MAc9C,GAAIV,EAEV1M,EAAKsN,oBAAoBZ,OACnB,IACN7K,IACCA,EAAagC,QACb0D,EAAG2F,SAAW3F,EAAG2F,OAAmBK,eACnChG,EAAG2F,OAAmBK,aAAa,cAKrC,OAGAhG,EAAEiG,gB,IAIJ,KAAOC,wBAA0B,WAC5BzN,EAAK8L,8BAAgC9L,EAAKmC,QAAQ4J,cAIrD/L,EAAKwL,QAAQC,UAEdzL,EAAKgM,a,EAGN,KAAO0B,0BAA4B,SAACnG,G,IAIlCU,GAHDjI,EAAK0K,mBAAqB,GAEtB1K,EAAKuL,0BACgB,QAAxBtD,EAAAjI,EAAK2K,2BAAmB,IAAxB1C,GAAAA,EAA0B0F,iBAAiBpG,EAAE1F,eAI9C,GADqB7B,EAAK4N,kBAAkBC,MAAMtG,EAAE2F,UAC/BlN,EAAKmC,QAAQ4J,aAAlC,CAIA,IAAQlK,EAAiB0F,EAAjB1F,aACF6K,EAAa/I,EAAoB9B,GAEnC6K,GAEH1M,EAAKsN,oBAAoBZ,EAAY7K,E,GAQvC,KAAOiM,mBAAqB,SAACvG,GAC5B,IAAQmD,EAAuB1K,EAAvB0K,oBACR1K,EAAK0K,mBAAqB,GAErB1K,EAAKmC,QAAQ4J,gBAKlB/L,EAAK8K,cAAgBvD,EAAEwG,OAKnBrD,EAAmBhO,OAAS,GAC/BsD,EAAKwL,QAAQW,MAAMzB,EAAoB,CACtC7C,aAAcP,EAAqBC,KAIrBmD,EAAmB1G,MAAK,SAACgK,GAAQ,OAChDhO,EAAKmC,QAAQ8L,gBAAgBD,EAAS,MAKtCzG,EAAEiG,iBACEjG,EAAE1F,eACL0F,EAAE1F,aAAaqM,WAAalO,EAAKmO,yB,EAKpC,KAAOC,yBAA2B,SAAC7G,G,IAIjCU,GAHDjI,EAAKiL,kBAAoB,GAErBjL,EAAKuL,0BACgB,QAAxBtD,EAAAjI,EAAK2K,2BAAmB,IAAxB1C,GAAAA,EAA0B0F,iBAAiBpG,EAAE1F,c,EAW/C,KAAOwM,kBAAoB,SAAC9G,GAC3B,IAAQ0D,EAAsBjL,EAAtBiL,kBAGR,GAFAjL,EAAKiL,kBAAoB,IAEpBjL,EAAKmC,QAAQ4J,aAOjB,OAJAxE,EAAEiG,sBACEjG,EAAE1F,eACL0F,EAAE1F,aAAaqM,WAAa,SAK9BlO,EAAK8K,cAAgBvD,EAAEwG,OACvB/N,EAAKkL,iBAAmB5D,EAAqBC,GAE7CvH,EAAKiM,cAAchB,IAEFA,GAAqB,IAAIjH,MAAK,SAACgK,GAAQ,OACvDhO,EAAKmC,QAAQ8L,gBAAgBD,EAAS,KAKtCzG,EAAEiG,iBACEjG,EAAE1F,eACL0F,EAAE1F,aAAaqM,WAAalO,EAAKmO,yBAExBnO,EAAKuL,uBAGfhE,EAAEiG,kBAEFjG,EAAEiG,iBACEjG,EAAE1F,eACL0F,EAAE1F,aAAaqM,WAAa,Q,EAK/B,KAAOI,0BAA4B,SAAC/G,GAC/BvH,EAAKuL,wBACRhE,EAAEiG,iBAGiBxN,EAAK4N,kBAAkBW,MAAMhH,EAAE2F,UAK/ClN,EAAKuL,wBACR8B,YAAW,kBAAMrN,EAAKsL,mBAAmB,GAAE,GAE5CtL,EAAKgM,c,EAGN,KAAOwC,qBAAuB,SAACjH,G,IAK7BU,GAJDjI,EAAKyK,cAAgB,GAEjBzK,EAAKuL,yBACRhE,EAAEiG,iBACsB,QAAxBvF,EAAAjI,EAAK2K,2BAAmB,IAAxB1C,GAAAA,EAA0B0F,iBAAiBpG,EAAE1F,eACnC8B,EAAoB4D,EAAE1F,eAKhC0F,EAAEiG,iBAGHxN,EAAK4N,kBAAkBa,O,EAOxB,KAAOC,cAAgB,SAACnH,GACvB,IAAQkD,EAAkBzK,EAAlByK,cACRzK,EAAKyK,cAAgB,GAErBzK,EAAKwL,QAAQW,MAAM1B,EAAe,CACjC5C,aAAcP,EAAqBC,KAEpCvH,EAAKwL,QAAQmD,KAAK,CAAET,WAAYlO,EAAKmO,yBAEjCnO,EAAKuL,uBACRvL,EAAKsL,oBACKtL,EAAKmC,QAAQ4J,cACvB/L,EAAKwL,QAAQC,UAEdzL,EAAKgM,a,EAGN,KAAO4C,kBAAoB,SAACrH,GAC3B,IAAM2F,EAAS3F,EAAE2F,OAIc,oBAApBA,EAAO2B,WAME,UAAnB3B,EAAO4B,SACY,WAAnB5B,EAAO4B,SACY,aAAnB5B,EAAO4B,SACP5B,EAAO6B,oBAORxH,EAAEiG,iBACFN,EAAO2B,Y,EAprBPjP,KAAKgK,QAAU,IAAIF,EAAcC,EAAeC,GAChDhK,KAAK4L,QAAUtB,EAAQ8E,aACvBpP,KAAKuC,QAAU+H,EAAQ+E,aACvBrP,KAAK8L,SAAWxB,EAAQgF,cACxBtP,KAAKgO,kBAAoB,IAAIpO,EAAkBI,KAAKH,iB,CAuoBpD,OAtoBAI,EAAAA,EAAAA,GAAAoK,EAAA,EAAAzM,IAAA,UAAAsC,MAKD,W,IAMsBmI,EAGDkH,EARpB,MAAO,CACNhF,mBAAoBvK,KAAKuK,mBAAmBiF,KAC5C/E,yBAA0BzK,KAAKyK,yBAAyB+E,KACxD7E,kBAAmB3K,KAAK2K,kBAAkB6E,KAC1C9E,YAAa1K,KAAK0K,YAAY8E,KAC9B5E,oBAA2C,QAAvBvC,EAAArI,KAAK4K,0BAAkB,IAAvBvC,OAAA,EAAAA,EAAyBvL,SAAU,EACvD+N,cAAe7K,KAAK6K,cAAc/N,OAClCgO,mBAAoB9K,KAAK8K,mBAAmBhO,OAC5CuO,mBAAyC,QAAtBkE,EAAAvP,KAAKqL,yBAAiB,IAAtBkE,OAAA,EAAAA,EAAwBzS,SAAU,E,GAIvD,CAAAc,IAAA,SAAAiE,IACA,WACC,OAAO7B,KAAKgK,QAAQnF,M,GACpB,CAAAjH,IAAA,WAAAiE,IACD,WACC,OAAO7B,KAAKgK,QAAQzB,Q,GAErB,CAAA3K,IAAA,cAAAiE,IAGA,WACC,OAAO7B,KAAKgK,QAAQG,W,GACpB,CAAAvM,IAAA,QAAAsC,MAED,WACC,IAAMuP,EAAOzP,KAAKmK,YAClB,QAAa9L,IAAToR,EAAJ,CAIA,GAAIA,EAAKC,yBACR,MAAM,IAAIpR,MAAM,oDAEjBmR,EAAKC,0BAA2B,EAChC1P,KAAK2P,kBAAkBF,E,IACvB,CAAA7R,IAAA,WAAAsC,MAED,WACC,IASCmI,EATKoH,EAAOzP,KAAKmK,iBACL9L,IAAToR,IAIJA,EAAKC,0BAA2B,EAChC1P,KAAK4P,qBAAqB5P,KAAKmK,aAC/BnK,KAAKkM,6BACDlM,KAAKoL,sBACG,QAAX/C,EAAArI,KAAK6E,cAAM,IAAXwD,GAAAA,EAAamE,qBAAqBxM,KAAKoL,sB,GAExC,CAAAxN,IAAA,qBAAAsC,MAED,SACCuL,EACAxK,EACA+I,GACc,IAAA9H,EAAA,KAId,OAHAlC,KAAKyK,yBAAyBjK,IAAIiL,EAAUzB,GAC5ChK,KAAKuK,mBAAmB/J,IAAIiL,EAAUxK,GAE/B,WACNiB,EAAKqI,mBAAmBsF,OAAOpE,GAC/BvJ,EAAKuI,yBAAyBoF,OAAOpE,E,IAEtC,CAAA7N,IAAA,oBAAAsC,MAED,SACCuL,EACAxK,EACA+I,GACc,IAAA8F,EAAA,KACd9P,KAAK0K,YAAYlK,IAAIiL,EAAUxK,GAC/BjB,KAAK2K,kBAAkBnK,IAAIiL,EAAUzB,GAErC,IAAM+F,EAAkB,SAACpI,GAAM,OAAKmI,EAAKC,gBAAgBpI,EAAG8D,EAAS,EAC/DuD,EAAoB,SAACrH,GAAM,OAAKmI,EAAKd,kBAAkBrH,EAAE,EAM/D,OAJA1G,EAAK+O,aAAa,YAAa,QAC/B/O,EAAKgP,iBAAiB,YAAaF,GACnC9O,EAAKgP,iBAAiB,cAAejB,GAE9B,WACNc,EAAKpF,YAAYmF,OAAOpE,GACxBqE,EAAKnF,kBAAkBkF,OAAOpE,GAE9BxK,EAAKiP,oBAAoB,YAAaH,GACtC9O,EAAKiP,oBAAoB,cAAelB,GACxC/N,EAAK+O,aAAa,YAAa,Q,IAEhC,CAAApS,IAAA,oBAAAsC,MAED,SAAyBkO,EAAkBnN,GAAgC,IAAAkP,EAAA,KACpEC,EAAkB,SAACzI,GAAY,OAAKwI,EAAKC,gBAAgBzI,EAAGyG,EAAS,EACrEiC,EAAiB,SAAC1I,GAAY,OAAKwI,EAAKE,eAAe1I,EAAGyG,EAAS,EACnEkC,EAAa,SAAC3I,GAAY,OAAKwI,EAAKG,WAAW3I,EAAGyG,EAAS,EAMjE,OAJAnN,EAAKgP,iBAAiB,YAAaG,GACnCnP,EAAKgP,iBAAiB,WAAYI,GAClCpP,EAAKgP,iBAAiB,OAAQK,GAEvB,WACNrP,EAAKiP,oBAAoB,YAAaE,GACtCnP,EAAKiP,oBAAoB,WAAYG,GACrCpP,EAAKiP,oBAAoB,OAAQI,E,IAElC,CAAA1S,IAAA,oBAAAsC,MAED,SAA0BoN,GAEpBA,EAAO2C,mBAGZ3C,EAAO2C,iBACN,YACAjQ,KAAK0M,oBAENY,EAAO2C,iBAAiB,YAAajQ,KAAKyM,2BAA2B,GACrEa,EAAO2C,iBAAiB,UAAWjQ,KAAK6N,yBAAyB,GACjEP,EAAO2C,iBACN,YACAjQ,KAAKkO,oBAENZ,EAAO2C,iBACN,YACAjQ,KAAK8N,2BACL,GAEDR,EAAO2C,iBACN,YACAjQ,KAAK0O,2BACL,GAEDpB,EAAO2C,iBAAiB,WAAYjQ,KAAKyO,mBACzCnB,EAAO2C,iBACN,WACAjQ,KAAKwO,0BACL,GAEDlB,EAAO2C,iBAAiB,OAAQjQ,KAAK8O,eACrCxB,EAAO2C,iBACN,OACAjQ,KAAK4O,sBACL,G,GAED,CAAAhR,IAAA,uBAAAsC,MAED,SAA6BoN,GAEvBA,EAAO4C,sBAGZ5C,EAAO4C,oBAAoB,YAAalQ,KAAK0M,oBAC7CY,EAAO4C,oBACN,YACAlQ,KAAKyM,2BACL,GAEDa,EAAO4C,oBAAoB,UAAWlQ,KAAK6N,yBAAyB,GACpEP,EAAO4C,oBACN,YACAlQ,KAAKkO,oBAENZ,EAAO4C,oBACN,YACAlQ,KAAK8N,2BACL,GAEDR,EAAO4C,oBACN,YACAlQ,KAAK0O,2BACL,GAEDpB,EAAO4C,oBACN,WACAlQ,KAAKyO,mBAENnB,EAAO4C,oBACN,WACAlQ,KAAKwO,0BACL,GAEDlB,EAAO4C,oBAAoB,OAAQlQ,KAAK8O,eACxCxB,EAAO4C,oBACN,OACAlQ,KAAK4O,sBACL,G,GAED,CAAAhR,IAAA,8BAAAsC,MAED,WACC,IAAMuL,EAAWzL,KAAKuC,QAAQE,cACxBkI,EAAoB3K,KAAK2K,kBAAkB9I,IAAI4J,GAErD,OAAO8E,EAAA,CACNjC,WAAYtO,KAAKkL,cAAgB,OAAS,QACtCP,GAAqB,CAAC,E,GAE3B,CAAA/M,IAAA,uBAAAsC,MAED,WACC,OAAIF,KAAK2L,uBAED,OAGD3L,KAAKwQ,8BAA8BlC,U,GAC1C,CAAA1Q,IAAA,qCAAAsC,MAED,WACC,IAAMuL,EAAWzL,KAAKuC,QAAQE,cAG9B,OAAO8N,EAAA,CACNvH,QAAS,GACTC,QAAS,GACTsE,sBAAsB,GALUvN,KAAKyK,yBAAyB5I,IAAI4J,IAMlC,CAAC,E,GAElC,CAAA7N,IAAA,uBAAAsC,MAOD,WACC,IAAMuQ,EAAWzQ,KAAKuC,QAAQmO,cAC9B,OAAOnT,OAAOP,KAAKwG,GAAaY,MAC/B,SAACxG,GAAW,OAAK4F,EAAqB5F,KAAS6S,CAAQ,G,GAExD,CAAA7S,IAAA,sBAAAsC,MAED,SAA4ByQ,EAAc1O,GACzCjC,KAAKkM,6BAELlM,KAAK+K,oBLnTA,SACN4F,EACA1O,GAEA,IAAMX,EAAS+B,EAAkBsN,GACjC,IAAKrP,EACJ,MAAM,IAAIhD,MAAM,eAAD0D,OAAgB2O,EAAI,0BAEpC,IAAMhR,EAAS,IAAI0B,EAAiBC,GAEpC,OADA3B,EAAOoO,iBAAiB9L,GACjBtC,C,CKySqBiR,CAAuBD,EAAM1O,GACxDjC,KAAKgL,oBAAsBhL,KAAK8L,SAAS+E,UACxCF,EACA3Q,KAAK+K,qBAEN/K,KAAK4L,QAAQgB,UAAU,CAAC5M,KAAKgL,qB,GAC7B,CAAApN,IAAA,2BAAAsC,MAqCD,SAAiCe,GAAsB,IAAA6P,EAAA,KACtD9Q,KAAKkM,6BACLlM,KAAKiL,sBAAwBhK,EAoB7BjB,KAAKmL,sBAAwBsC,YAAW,W,IAChCpF,EAAP,OAAuB,QAAhBA,EAAAyI,EAAK3G,mBAAW,IAAhB9B,OAAA,EAAAA,EAAkB4H,iBACxB,YACAa,EAAK7E,kCACL,E,GAlByB,I,GAqB3B,CAAArO,IAAA,6BAAAsC,MAED,WACC,GAAIF,KAAKiL,sBAAuB,C,IAI9B5C,EADD,GAFArI,KAAKiL,sBAAwB,KAEzBjL,KAAKmK,YACG,QAAX9B,EAAArI,KAAK6E,cAAM,IAAXwD,GAAAA,EAAa0I,aAAa/Q,KAAKmL,4BAAyB9M,GACxD2B,KAAKmK,YAAY+F,oBAChB,YACAlQ,KAAKiM,kCACL,GAKF,OADAjM,KAAKmL,sBAAwB,MACtB,C,CAGR,OAAO,C,GACP,CAAAvN,IAAA,kBAAAsC,MAkCD,SAAuByH,EAAc8D,GAChC9D,EAAEgF,mBAID3M,KAAK4K,qBACT5K,KAAK4K,mBAAqB,IAE3B5K,KAAK4K,mBAAmBoG,QAAQvF,G,GAChC,CAAA7N,IAAA,kBAAAsC,MA6ID,SAAuB+Q,EAAe7C,GACrCpO,KAAK8K,mBAAmBkG,QAAQ5C,E,GAChC,CAAAxQ,IAAA,iBAAAsC,MA2CD,SAAsB+Q,EAAe7C,GACL,OAA3BpO,KAAKqL,oBACRrL,KAAKqL,kBAAoB,IAE1BrL,KAAKqL,kBAAkB2F,QAAQ5C,E,GAC/B,CAAAxQ,IAAA,aAAAsC,MA4ED,SAAkB+Q,EAAe7C,GAChCpO,KAAK6K,cAAcmG,QAAQ5C,E,KAC3B/D,CAAA,CA9qB2B,GCpBhB6G,EAA+B,SAC3C5G,EACA6G,EACAnH,GAEA,OAAO,IAAIK,EAAiBC,EAAS6G,EAASnH,E,4DCAlCoH,GAAaC,E,QAAAA,eAA8B,CACvDC,qBAAiBjT,G,6ECLlB,SAASkT,EAAuBC,GAC9B,MAAO,yBAA2BA,EAAO,4CAA8CA,EAAhF,iFACT,CAGA,IAAIC,EACuB,oBAAXC,QAAyBA,OAAOC,YAAc,eAS1DC,EAAe,WACjB,OAAOjL,KAAKkL,SAASpU,SAAS,IAAIqU,UAAU,GAAGjO,MAAM,IAAIkO,KAAK,IAChE,EAEIC,EAAc,CAChBC,KAAM,eAAiBL,IACvBM,QAAS,kBAAoBN,IAC7BO,qBAAsB,WACpB,MAAO,+BAAiCP,GAC1C,GAOF,SAASQ,EAAchI,GACrB,GAAmB,kBAARA,GAA4B,OAARA,EAAc,OAAO,EAGpD,IAFA,IAAIiI,EAAQjI,EAE4B,OAAjC7M,OAAO+U,eAAeD,IAC3BA,EAAQ9U,OAAO+U,eAAeD,GAGhC,OAAO9U,OAAO+U,eAAelI,KAASiI,CACxC,CAuFA,SAASE,EAAYC,EAASC,EAAgBC,GAC5C,IAAIC,EAEJ,GAA8B,oBAAnBF,GAAqD,oBAAbC,GAA+C,oBAAbA,GAAmD,oBAAjBzU,UAAU,GAC/H,MAAM,IAAIK,MAA8CiT,EAAuB,IAQjF,GAL8B,oBAAnBkB,GAAqD,qBAAbC,IACjDA,EAAWD,EACXA,OAAiBpU,GAGK,qBAAbqU,EAA0B,CACnC,GAAwB,oBAAbA,EACT,MAAM,IAAIpU,MAA8CiT,EAAuB,IAGjF,OAAOmB,EAASH,EAATG,CAAsBF,EAASC,EACxC,CAEA,GAAuB,oBAAZD,EACT,MAAM,IAAIlU,MAA8CiT,EAAuB,IAGjF,IAAIqB,EAAiBJ,EACjBK,EAAeJ,EACfK,EAAmB,GACnBC,EAAgBD,EAChBE,GAAgB,EASpB,SAASC,IACHF,IAAkBD,IACpBC,EAAgBD,EAAiBpP,QAErC,CAQA,SAASwP,IACP,GAAIF,EACF,MAAM,IAAI1U,MAA8CiT,EAAuB,IAGjF,OAAOsB,CACT,CA0BA,SAASM,EAAUC,GACjB,GAAwB,oBAAbA,EACT,MAAM,IAAI9U,MAA8CiT,EAAuB,IAGjF,GAAIyB,EACF,MAAM,IAAI1U,MAA8CiT,EAAuB,IAGjF,IAAI8B,GAAe,EAGnB,OAFAJ,IACAF,EAAcjS,KAAKsS,GACZ,WACL,GAAKC,EAAL,CAIA,GAAIL,EACF,MAAM,IAAI1U,MAA8CiT,EAAuB,IAGjF8B,GAAe,EACfJ,IACA,IAAIK,EAAQP,EAAczO,QAAQ8O,GAClCL,EAAcQ,OAAOD,EAAO,GAC5BR,EAAmB,IAVnB,CAWF,CACF,CA4BA,SAASU,EAASC,GAChB,IAAKrB,EAAcqB,GACjB,MAAM,IAAInV,MAA8CiT,EAAuB,IAGjF,GAA2B,qBAAhBkC,EAAO9C,KAChB,MAAM,IAAIrS,MAA8CiT,EAAuB,IAGjF,GAAIyB,EACF,MAAM,IAAI1U,MAA8CiT,EAAuB,IAGjF,IACEyB,GAAgB,EAChBH,EAAeD,EAAeC,EAAcY,EAC9C,CAAE,QACAT,GAAgB,CAClB,CAIA,IAFA,IAAIU,EAAYZ,EAAmBC,EAE1BhW,EAAI,EAAGA,EAAI2W,EAAU5W,OAAQC,IAAK,EAEzCqW,EADeM,EAAU3W,KAE3B,CAEA,OAAO0W,CACT,CA4EA,OAHAD,EAAS,CACP7C,KAAMqB,EAAYC,QAEbU,EAAQ,CACba,SAAUA,EACVL,UAAWA,EACXD,SAAUA,EACVS,eAnEF,SAAwBC,GACtB,GAA2B,oBAAhBA,EACT,MAAM,IAAItV,MAA8CiT,EAAuB,KAGjFqB,EAAiBgB,EAKjBJ,EAAS,CACP7C,KAAMqB,EAAYE,SAEtB,IAuDST,GA9CT,WACE,IAAIoC,EAEAC,EAAiBX,EACrB,OAAOU,EAAO,CASZV,UAAW,SAAmBY,GAC5B,GAAwB,kBAAbA,GAAsC,OAAbA,EAClC,MAAM,IAAIzV,MAA8CiT,EAAuB,KAGjF,SAASyC,IACHD,EAASE,MACXF,EAASE,KAAKf,IAElB,CAIA,OAFAc,IAEO,CACLE,YAFgBJ,EAAeE,GAInC,IACMvC,GAAgB,WACtB,OAAOzR,IACT,EAAG6T,CACL,EAaqClB,CACvC,C,kCC7VO,SAASwB,EAASC,GACxB,MAAwB,kBAAVA,C,CClCR,IAAMC,EAAc,uBACdC,EAAa,sBACbC,EAAsB,+BACtBC,EAAQ,iBACRC,EAAO,gBACPC,EAAW,oBCAjB,SAASC,EACf1M,EACA2M,GAEA,MAAO,CACNjE,KAAM0D,EACNQ,QAAS,CACRD,mBAAoBA,GAAsB,KAC1C3M,aAAcA,GAAgB,M,CCGjC,IAAM6M,EAAyB,CAC9BnE,KAAM0D,EACNQ,QAAS,CACR5M,aAAc,KACd2M,mBAAoB,OAIf,SAASG,EAAgBzK,GAC/B,OAAO,WAKiC,IAJvC0K,EAAuB/W,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,GAC1B+L,EAAyB/L,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,CAC3B4O,eAAe,GAGhBoI,EAIsBjL,EAHrB6C,cAAAA,OAAa,IAAAoI,GAAOA,EACpBhN,EAEqB+B,EAFrB/B,aACAuD,EACqBxB,EADrBwB,sBAEKjJ,EAAU+H,EAAQ+E,aAClBvD,EAAWxB,EAAQgF,cAGzBhF,EAAQkJ,SAASmB,EAAgB1M,IAgDnC,SACC+M,EACAzS,EACAuJ,IAEAjO,EAAAA,EAAAA,IAAW0E,EAAQ4J,aAAc,yCACjC6I,EAAUnU,SAAQ,SAAU4K,IAC3B5N,EAAAA,EAAAA,GACCiO,EAASoJ,UAAUzJ,GACnB,uC,IAvDD0J,CAAiBH,EAAWzS,EAASuJ,GAGrC,IAAML,EAoER,SAA4BuJ,EAAyBzS,GAEpD,IADA,IAAIkJ,EAAW,KACN1O,EAAIiY,EAAUlY,OAAS,EAAGC,GAAK,EAAGA,IAC1C,GAAIwF,EAAQ6S,cAAcJ,EAAUjY,IAAK,CACxC0O,EAAWuJ,EAAUjY,GACrB,K,CAGF,OAAO0O,C,CA5EW4J,CAAmBL,EAAWzS,GAC/C,GAAgB,MAAZkJ,EAAJ,CAMA,IAAImJ,EAAqC,KACzC,GAAI3M,EAAc,CACjB,IAAKuD,EACJ,MAAM,IAAIlN,MAAM,0CA+CpB,SAA+CkN,IAC9C3N,EAAAA,EAAAA,GACkC,oBAA1B2N,EACP,2E,CAhDC8J,CAAsC9J,GACtCoJ,EAAqBpJ,EAAsBC,E,CAI5CnB,EAAQkJ,SAASmB,EAAgB1M,EAAc2M,IAE/C,IACMjU,EADSmL,EAASoJ,UAAUzJ,GACdmB,UAAUrK,EAASkJ,GAEvC,GAAY,MAAR9K,EAAJ,EA0CF,SAA4BA,IAC3B9C,EAAAA,EAAAA,GAAUsW,EAASxT,GAAO,0B,CAxCzB4U,CAAmB5U,GACnBmL,EAAS0J,UAAU/J,GAEnB,IAAMgF,EAAW3E,EAAS2J,cAAchK,GACxC,MAAO,CACNkF,KAAM2D,EACNO,QAAS,CACRpE,SAAAA,EACA9P,KAAAA,EACA8K,SAAAA,EACAxD,aAAcA,GAAgB,KAC9B2M,mBAAoBA,GAAsB,KAC1Cc,iBAAkB7I,G,OAnCnBvC,EAAQkJ,SAASsB,E,EC/CpB,SAAAvR,EAAA6G,EAAAxM,EAAAsC,G,+aAaO,SAASyV,EAAWrL,GAC1B,OAAO,WAAkC,IAApBN,EAAO/L,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzBsE,EAAU+H,EAAQ+E,aAClBvD,EAAWxB,EAAQgF,eAqB3B,SAA0B/M,IACzB1E,EAAAA,EAAAA,GAAU0E,EAAQ4J,aAAc,yCAChCtO,EAAAA,EAAAA,IACE0E,EAAQqT,UACT,oD,CAxBAT,CAAiB5S,GACjB,IAAMsT,EAiDR,SAA6BtT,GAC5B,IAAMsT,EAAYtT,EAChBuT,eACA9U,OAAOuB,EAAQ8L,gBAAiB9L,GAElC,OADAsT,EAAUE,UACHF,C,CAtDYG,CAAoBzT,GAGtCsT,EAAUhV,SAAQ,SAACuN,EAAUkF,GAC5B,IAAM2C,EAuBT,SACC7H,EACAkF,EACAxH,EACAvJ,GAEA,IAAM+K,EAASxB,EAASoK,UAAU9H,GAC9B6H,EAAa3I,EAASA,EAAOyB,KAAKxM,EAAS6L,QAAY/P,GAQ5D,SAA8B4X,IAC7BpY,EAAAA,EAAAA,GACuB,qBAAfoY,GAA8B9B,EAAS8B,GAC9C,qD,EAVDE,CAAqBF,GACK,qBAAfA,IACVA,EAAuB,IAAV3C,EAAc,CAAC,EAAI/Q,EAAQ6T,iBAEzC,OAAOH,C,CAnCcI,CAAoBjI,EAAUkF,EAAOxH,EAAUvJ,GAC5DkR,EAA8B,CACnC9C,KAAM8D,EACNI,QAAS,CACRoB,WAAY1F,EAAA,GACRvG,EACAiM,KAIN3L,EAAQkJ,SAASC,E,KCvBb,SAAS6C,EAAchM,GAC7B,OAAO,WACN,IAAM/H,EAAU+H,EAAQ+E,aAClBvD,EAAWxB,EAAQgF,eAa3B,SAA0B/M,IACzB1E,EAAAA,EAAAA,GAAU0E,EAAQ4J,aAAc,0C,CAb/BoK,CAAiBhU,GAEjB,IAAMkJ,EAAWlJ,EAAQE,cACT,MAAZgJ,IACYK,EAASoJ,UAAUzJ,GAAU,GACrCI,QAAQtJ,EAASkJ,GACxBK,EAAS0K,eAEV,MAAO,CAAE7F,KAAM+D,E,ECnBV,SAAS+B,EACfC,EACAC,GAEA,OAAwB,OAApBA,EACmB,OAAfD,EAEDzZ,MAAMC,QAAQwZ,GAClBA,EAA6BtS,MAAK,SAACC,GAAC,OAAKA,IAAMsS,CAAe,IAC9DD,IAAeC,C,CCGZ,SAASC,EAAYtM,GAC3B,OAAO,SACNuM,GAEuB,IADrB5O,GACqBhK,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GADU,CAAC,GAAhCgK,cAqBJ,SAAgC4O,IAC/BhZ,EAAAA,EAAAA,GAAUZ,MAAMC,QAAQ2Z,GAAe,qC,CApBtCC,CAAuBD,GACvB,IAAMhB,EAAYgB,EAAanT,MAAM,GAC/BnB,EAAU+H,EAAQ+E,aAClBvD,EAAWxB,EAAQgF,cAMzB,OAiCF,SACCuG,EACA/J,EACA6K,GAKA,IAAK,IAAI5Z,EAAI8Y,EAAU/Y,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC/C,IAAMqR,EAAWyH,EAAU9Y,GAEtB0Z,EADc3K,EAASiL,cAAc3I,GACbuI,IAC5Bd,EAAUtC,OAAOxW,EAAG,E,EAjDrBia,CAA2BnB,EAAW/J,EADdvJ,EAAQmO,eAmBlC,SACCmF,EACAtT,EACAuJ,IAEAjO,EAAAA,EAAAA,GAAU0E,EAAQ4J,aAAc,0CAChCtO,EAAAA,EAAAA,IAAW0E,EAAQqT,UAAW,iCAC9B,IAAK,IAAI7Y,EAAI,EAAGA,EAAI8Y,EAAU/Y,OAAQC,IAAK,CAC1C,IAAMqR,EAAWyH,EAAU9Y,IAC3Bc,EAAAA,EAAAA,GACCgY,EAAUoB,YAAY7I,KAAcrR,EACpC,wDAGD,IAAMuQ,EAASxB,EAASoK,UAAU9H,IAClCvQ,EAAAA,EAAAA,GAAUyP,EAAQ,uC,EAhClB4J,CAAgBrB,EAAWtT,EAASuJ,GAqDtC,SACC+J,EACAtT,EACAuJ,GAGA+J,EAAUhV,SAAQ,SAAUuN,GACZtC,EAASoK,UAAU9H,GAC3B7B,MAAMhK,EAAS6L,E,IA5DtB+I,CAAgBtB,EAAWtT,EAASuJ,GAE7B,CACN6E,KAAM6D,EACNK,QAAS,CACRgB,UAAAA,EACA5N,aAAcA,GAAgB,M,EC7B3B,SAASmP,EAAwB9M,GACvC,OAAO,WAEN,GADgBA,EAAQ+E,aACZlD,aACX,MAAO,CAAEwE,KAAM4D,E,ECOX,IAAM8C,EAAmB,WAM/B,SAAAA,EAAmBC,EAAqB/U,GAA0B,IAAAnC,EAAA,MAAAN,EAAAA,EAAAA,GAAA,KAAAuX,GAFlE,KAAQE,SAAU,EAwDlB,KAAQC,qBAAuB,WAC9B,IAAMC,EAAcrX,EAAKkX,MAAMpE,WAAWwE,SAAW,EACjDtX,EAAKuX,UACJF,IAAgBrX,EAAKmX,SACxBnX,EAAKuX,QAAQC,QACbxX,EAAKmX,SAAU,IACJE,GAAerX,EAAKmX,UAC/BnX,EAAKuX,QAAQE,WACbzX,EAAKmX,SAAU,G,EA7DjBvX,KAAKsX,MAAQA,EACbtX,KAAKuC,QAAUA,EACf+U,EAAMnE,UAAUnT,KAAKwX,qB,CAiDrB,OAhDAvX,EAAAA,EAAAA,GAAAoX,EAAA,EAAAzZ,IAAA,iBAAAsC,MAED,SAAsByX,GACrB3X,KAAK2X,QAAUA,C,GACf,CAAA/Z,IAAA,aAAAsC,MAED,WACC,OAAOF,KAAKuC,O,GACZ,CAAA3E,IAAA,aAAAsC,MAED,WACC,OAAOF,KAAK2X,O,GACZ,CAAA/Z,IAAA,cAAAsC,MAED,WACC,OAAO,KAAMqC,QAAgCuJ,Q,GAC7C,CAAAlO,IAAA,aAAAsC,MAED,WAEC,IAAMoK,EAAUtK,KACRwT,EAAaxT,KAAKsX,MAAlB9D,SAWR,IAAM5H,EC/CD,SACNtB,GAEA,MAAO,CACNsC,UAAWmI,EAAgBzK,GAC3BkD,kBAAmB4J,EAAwB9M,GAC3CiC,MAAOqK,EAAYtM,GACnByE,KAAM4G,EAAWrL,GACjBuB,QAASyK,EAAchM,G,CDuCPwN,CAAsB9X,MAEtC,OAAOzC,OAAOP,KAAK4O,GAAS3I,QAC3B,SAAC8U,EAA+Bna,GAC/B,IAbyBoa,EAanBvE,EAA6B7H,EAClChO,GAGD,OADCma,EAAsBna,IAhBEoa,EAgBuBvE,EAf1C,WAAoB,QAAAzV,EAAAC,UAAAnB,OAAhBoB,EAAI,IAAAjB,MAAAe,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJD,EAAIC,GAAAF,UAAAE,GACd,IAAMsV,EAASuE,EAAcC,MAAM3N,EAASpM,GACtB,qBAAXuV,GACVD,EAASC,E,GAaHsE,C,GAER,CAAC,E,GAEF,CAAAna,IAAA,WAAAsC,MAED,SAAgBuT,GACfzT,KAAKsX,MAAM9D,SAASC,E,KACpB4D,CAAA,CA1D8B,GEMzB,SAASa,EAASvb,EAAYC,GACpC,MAAO,CACN0J,EAAG3J,EAAE2J,EAAI1J,EAAE0J,EACXmB,EAAG9K,EAAE8K,EAAI7K,EAAE6K,E,CCrBN,IAAM0Q,EAAiB,GACjBC,EAAgB,GAE5BD,EAAcE,aAAc,EAC5BD,EAAaE,YAAa,ECapB,IAAMC,EAAmB,WAI/B,SAAAA,EAAmBjB,EAAqBxL,IAA2BhM,EAAAA,EAAAA,GAAA,KAAAyY,GAClEvY,KAAKsX,MAAQA,EACbtX,KAAK8L,SAAWA,C,CA6LhB,OA5LA7L,EAAAA,EAAAA,GAAAsY,EAAA,EAAA3a,IAAA,yBAAAsC,MAED,SACCkT,GAEc,IAAAhT,EAAA,KACNoY,GAF0Bva,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE9Bua,YACR3a,EAAAA,EAAAA,GAA8B,oBAAbuV,EAAyB,iCAC1CvV,EAAAA,EAAAA,GACuB,qBAAf2a,GAA8Bvb,MAAMC,QAAQsb,GACnD,4DAGD,IAAIC,EAAczY,KAAKsX,MAAMpE,WAAWwF,QAkBxC,OAAO1Y,KAAKsX,MAAMnE,WAjBG,WACpB,IAAMwF,EAAQvY,EAAKkX,MAAMpE,WACnB0F,EAAiBD,EAAMD,QAC7B,IACC,IAAMG,EACLD,IAAmBH,GAClBG,IAAmBH,EAAc,IDhChC,SACNK,EACAN,GAEA,OAAIM,IAAaX,IAIbW,IAAaV,GAA6B,qBAAfI,IZ0CajY,EYtCDuY,EAAZN,EZuCjBxX,QAAO,SAACqD,GAAC,OAAK9D,EAAO+D,QAAQD,IAAM,CAAC,KYtCjCvH,OAAS,GAD1B,IZsC4CyD,C,CajBtCwY,CAASJ,EAAMK,gBAAiBR,GAE9BK,GACJzF,G,CAEA,QACDqF,EAAcG,C,OAKhB,CAAAhb,IAAA,0BAAAsC,MAED,SAA+BkT,GAAiC,IAAAlR,EAAA,MAC/DrE,EAAAA,EAAAA,GAA8B,oBAAbuV,EAAyB,gCAE1C,IAAI6F,EAAgBjZ,KAAKsX,MAAMpE,WAAWgG,WAW1C,OAAOlZ,KAAKsX,MAAMnE,WAVG,WACpB,IAAMgG,EAAYjX,EAAKoV,MAAMpE,WAAWgG,WACpCC,IAAcF,IAIlBA,EAAgBE,EAChB/F,I,MAID,CAAAxV,IAAA,gBAAAsC,MAED,SAAqBuL,GACpB,IAAKA,EACJ,OAAO,EAER,IAAMrO,EAAS4C,KAAK8L,SAASoJ,UAAUzJ,GAGvC,OAFA5N,EAAAA,EAAAA,GAAUT,EAAQ,6CAAF4E,OAA+CyJ,KAE3DzL,KAAKmM,cAIF/O,EAAOgc,QAAQpZ,KAAMyL,E,GAC5B,CAAA7N,IAAA,kBAAAsC,MAED,SAAuBkO,GAEtB,IAAKA,EACJ,OAAO,EAER,IAAMd,EAAStN,KAAK8L,SAASoK,UAAU9H,GAGvC,OAFAvQ,EAAAA,EAAAA,GAAUyP,EAAQ,6CAAFtL,OAA+CoM,OAE1DpO,KAAKmM,cAAgBnM,KAAK4V,aAO9Ba,EAHkBzW,KAAK8L,SAASiL,cAAc3I,GACvBpO,KAAK0Q,gBAEgBpD,EAAO+L,QAAQrZ,KAAMoO,G,GAElE,CAAAxQ,IAAA,aAAAsC,MAED,WACC,OAAO0E,QAAQ5E,KAAK0Q,c,GACpB,CAAA9S,IAAA,mBAAAsC,MAED,SAAwBuL,GAEvB,IAAKA,EACJ,OAAO,EAER,IAAMrO,EAAS4C,KAAK8L,SAASoJ,UAAUzJ,GAAU,GAGjD,OAFA5N,EAAAA,EAAAA,GAAUT,EAAQ,6CAAF4E,OAA+CyJ,OAE1DzL,KAAKmM,eAAiBnM,KAAK0V,oBAIb1V,KAAK8L,SAAS2J,cAAchK,KACvBzL,KAAK0Q,eAKtBtT,EAAO+O,WAAWnM,KAAMyL,G,GAC/B,CAAA7N,IAAA,eAAAsC,MAED,SACCkO,GAIA,IAAKA,EACJ,OAAO,EAGR,IAAQkL,GAPDrb,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,CAAEqb,SAAS,IAObA,QACR,IAAKtZ,KAAKmM,aACT,OAAO,EAGR,IAAMuK,EAAa1W,KAAK8L,SAASiL,cAAc3I,GACzCuI,EAAkB3W,KAAK0Q,cAC7B,GAAIiG,IAAoBF,EAAYC,EAAYC,GAC/C,OAAO,EAGR,IAAMd,EAAY7V,KAAK8V,eACvB,IAAKD,EAAU/Y,OACd,OAAO,EAGR,IAAMwW,EAAQuC,EAAUvR,QAAQ8J,GAChC,OAAIkL,EACIhG,IAAUuC,EAAU/Y,OAAS,EAE7BwW,GAAS,C,GAEjB,CAAA1V,IAAA,cAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWqG,cAAc9I,Q,GAC3C,CAAA7S,IAAA,UAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWqG,cAAc5Y,I,GAC3C,CAAA/C,IAAA,cAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWqG,cAAc9N,Q,GAC3C,CAAA7N,IAAA,eAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWqG,cAAc1D,S,GAC3C,CAAAjY,IAAA,gBAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWqG,cAActD,U,GAC3C,CAAArY,IAAA,UAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWqG,cAAc3D,O,GAC3C,CAAAhY,IAAA,iBAAAsC,MAED,WACC,OAAO0E,QAAQ5E,KAAKsX,MAAMpE,WAAWqG,cAAc7D,e,GACnD,CAAA9X,IAAA,yBAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWgG,WAAWM,mB,GACxC,CAAA5b,IAAA,+BAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWgG,WAAWO,yB,GACxC,CAAA7b,IAAA,kBAAAsC,MAED,WACC,OAAOF,KAAKsX,MAAMpE,WAAWgG,WAAWjR,Y,GACxC,CAAArK,IAAA,wBAAAsC,MAED,WACC,OF9KK,SAA+ByY,GACrC,IA5BmBhc,EAAYC,EA4BvBqL,EAAiE0Q,EAAjE1Q,aAAcuR,EAAmDb,EAAnDa,oBAAqBC,EAA8Bd,EAA9Bc,0BAC3C,OAAKxR,GAAiBuR,GAAwBC,EAGvCvB,GAhCwBtb,EAiCZ6c,EAhCZ,CACNnT,GAFkB3J,EAiCdsL,GA/BC3B,EAAI1J,EAAE0J,EACXmB,EAAG9K,EAAE8K,EAAI7K,EAAE6K,IA+BX+R,GAJO,I,CE2KAhO,CAAsBxL,KAAKsX,MAAMpE,WAAWgG,W,GACnD,CAAAtb,IAAA,iCAAAsC,MAED,WACC,OFlKK,SAAwCyY,GAC9C,IAAQ1Q,EAAsC0Q,EAAtC1Q,aAAcuR,EAAwBb,EAAxBa,oBACtB,OAAKvR,GAAiBuR,EAGftB,EAASjQ,EAAcuR,GAFtB,I,CE+JAE,CAA+B1Z,KAAKsX,MAAMpE,WAAWgG,W,KAC5DX,CAAA,CAnM8B,GCb1BoB,EAA0B,qBAAXC,OAAyBA,OAASC,KACjDC,EACLH,EAAeI,kBAAoBJ,EAAeK,uBAE5C,SAASC,EAAyBC,GACxC,OAAO,WAKN,IAAMC,EAAgB1M,WAAW2M,EAAa,GAIxCC,EAAiBC,YAAYF,EAAa,IAEhD,SAASA,IAGRrJ,aAAaoJ,GACbI,cAAcF,GACdH,G,GAkBI,IAAMM,EACuB,oBAA5BV,EAZD,SAA6CI,GACnD,IAAIO,EAAS,EACP1G,EAAW,IAAI+F,EAAwBI,GACvCjZ,EAAOsH,SAASmS,eAAe,IAErC,OADA3G,EAAS4G,QAAQ1Z,EAAM,CAAE2Z,eAAe,IACjC,WACNH,GAAUA,EACTxZ,EAAc4Z,KAAOJ,C,GA6CpBR,EClFSa,EAAS,WAwBrB,SAAAA,IAAqB,IAAA1a,EAAA,MAAAN,EAAAA,EAAAA,GAAA,KAAAgb,GAvBrB,KAAQC,MAAgB,GAGxB,KAAQC,cAAuB,GAI/B,KAAQC,UAAW,EAUnB,KAAQ3H,MAAQ,EAIhB,KAAQ4H,SAAW,KA+CnB,KAAQC,MAAQ,WAEf,IADA,IAAeC,EAAMhb,EAAb2a,MACD3a,EAAKkT,MAAQ8H,EAAEte,QAAQ,CAC7B,IAAMue,EAAejb,EAAKkT,MAU1B,GAPAlT,EAAKkT,QACL8H,EAAEC,GAAe1d,OAMbyC,EAAKkT,MAAQlT,EAAK8a,SAAU,CAG/B,IACC,IAAII,EAAO,EAAGC,EAAYH,EAAEte,OAASsD,EAAKkT,MAC1CgI,EAAOC,EACPD,IAEAF,EAAEE,GAAQF,EAAEE,EAAOlb,EAAKkT,OAEzB8H,EAAEte,QAAUsD,EAAKkT,MACjBlT,EAAKkT,MAAQ,C,EAGf8H,EAAEte,OAAS,EACXsD,EAAKkT,MAAQ,EACblT,EAAK6a,UAAW,C,EAMjB,KAAOO,qBAAuB,SAACpO,GAC9BhN,EAAK4a,cAAcla,KAAKsM,GACxBhN,EAAKqb,mB,EAxELzb,KAAK0b,aAAelB,EAAgBxa,KAAKmb,OACzCnb,KAAKyb,kBAAoBxB,GAAyB,WAEjD,GAAI7Z,EAAK4a,cAAcle,OACtB,MAAMsD,EAAK4a,cAAcW,O,IAuB3B,OApBA1b,EAAAA,EAAAA,GAAA6a,EAAA,EAAAld,IAAA,cAAAsC,MAYD,SAAmB0b,GAClB,IAAeR,EAAoBpb,KAA3B+a,MAAUW,EAAiB1b,KAAjB0b,aACbN,EAAEte,SACN4e,IACA1b,KAAKib,UAAW,GAGjBG,EAAEA,EAAEte,QAAU8e,C,KACdd,CAAA,CA7DoB,GCCTe,EAAO,WAGnB,SAAAA,EACSC,EACAC,IACPjc,EAAAA,EAAAA,GAAA,KAAA+b,G,KAFOC,QAAAA,E,KACAC,QAAAA,E,KAJFH,KAAsB,I,CAgB5B,OAXG3b,EAAAA,EAAAA,GAAA4b,EAAA,EAAAje,IAAA,OAAAsC,MAEJ,WACC,IACCF,KAAK4b,MAAQ5b,KAAK4b,M,CACjB,MAAOrd,GACRyB,KAAK8b,QAAQvd,E,CACZ,QACDyB,KAAK4b,KAAO,KACZ5b,KAAK+b,QAAQ/b,K,MAEd6b,CAAA,CAjBkB,GCFPG,EAAW,WAGvB,SAAAA,EAA2BF,IAA6Bhc,EAAAA,EAAAA,GAAA,KAAAkc,G,KAA7BF,QAAAA,E,KAFnBG,UAAuB,E,CAW9B,OATyDhc,EAAAA,EAAAA,GAAA+b,EAAA,EAAApe,IAAA,SAAAsC,MAE1D,SAAc0b,GACb,IAAMM,EAAQlc,KAAKic,UACbE,EAAID,EAAMpf,OACZof,EAAME,MACP,IAAIP,EAAQ7b,KAAK8b,SAAS,SAACzX,GAAC,OAAM6X,EAAMA,EAAMpf,QAAUuH,CAAC,IAE5D,OADA8X,EAAEP,KAAOA,EACFO,C,KACPH,CAAA,CAZsB,GCClBK,EAAY,IAAIvB,EAChBwB,EAAc,IAAIN,EAAYK,EAAUb,sBCHvC,ICSAe,EDTMC,EAAa,sBACbC,EAAa,sBACbC,EAAgB,yBAChBC,EAAgB,yBE6BtB,SAASC,EACfjM,EACAkM,GAEIA,GAAc5f,MAAMC,QAAQyT,GAC/BA,EAAK9P,SAAQ,SAACwD,GAAC,OAAKuY,EAAavY,GAAG,EAAM,KAI3CxG,EAAAA,EAAAA,GACiB,kBAAT8S,GAAqC,kBAATA,EACnCkM,EACG,8DACA,yC,WDpCON,GAAAA,EACL,OAAN,SADWA,EAEL,OAAN,Q,EAFWA,IAAAA,EAAW,KEXvB,IAAIO,EAAe,EC2BnB,SAASC,EAAiBC,GACzB,IAAMC,GDzBCH,KCyBsBrf,WAC7B,OAAQuf,GACP,KAAKT,EAAYW,OAChB,MAAO,IAAPlb,OAAWib,GACZ,KAAKV,EAAYY,OAChB,MAAO,IAAPnb,OAAWib,GACZ,QACC,MAAM,IAAI3e,MAAM,yBAAD0D,OAA0Bgb,I,CAI5C,SAASI,EAAuBC,GAC/B,OAAQA,EAAU,IACjB,IAAK,IACJ,OAAOd,EAAYW,OACpB,IAAK,IACJ,OAAOX,EAAYY,OACpB,QACC,MAAM,IAAI7e,MAAM,4BAAD0D,OAA6Bqb,I,CAI/C,SAASC,GAAoBC,EAAqBC,GACjD,IAAMC,EAAUF,EAAIE,UAChBC,GAAS,EACb,EAAG,CACF,IAAAC,EAGIF,EAAQxJ,OAFX2J,EAAID,EAAJC,KAGD,IAHKC,EAAAA,EAAAA,GAAAF,EACJzd,MAAK,GAAU,KAEFsd,EACb,OAAO,EAERE,IAAWE,C,QACFF,GACV,OAAO,C,CAGD,IAAMI,GAAmB,WAQ/B,SAAAA,EAAmBxG,IAAqBxX,EAAAA,EAAAA,GAAA,KAAAge,GAPxC,KAAQ7Z,MAA8C,IAAIuG,IAC1D,KAAQuT,YAAuC,IAAIvT,IACnD,KAAQwT,YAAuC,IAAIxT,IACnD,KAAQyT,eAAgC,KACxC,KAAQC,aAAoB,KAI3Ble,KAAKsX,MAAQA,C,CAwGb,OAvGArX,EAAAA,EAAAA,GAAA6d,EAAA,EAAAlgB,IAAA,YAAAsC,MAED,SAAiByQ,EAAkBvT,GAClCwf,EAAajM,GF3ER,SAAgCvT,IACtCS,EAAAA,EAAAA,GAC2B,oBAAnBT,EAAOgc,QACd,uCAEDvb,EAAAA,EAAAA,GAC6B,oBAArBT,EAAOwP,UACd,yCAED/O,EAAAA,EAAAA,GAC2B,oBAAnBT,EAAOyO,QACd,qC,CEiEAsS,CAAuB/gB,GAEvB,IAAMqO,EAAWzL,KAAKoe,WAAW7B,EAAYW,OAAQvM,EAAMvT,GAE3D,OADA4C,KAAKsX,MAAM9D,SJ5EN,SAAmB/H,GACzB,MAAO,CACNkF,KAAM6L,EACN3H,QAAS,CACRpJ,SAAAA,G,CIwEmBoF,CAAUpF,IACvBA,C,GACP,CAAA7N,IAAA,YAAAsC,MAED,SAAiByQ,EAAkBrD,GAClCsP,EAAajM,GAAM,GFrEd,SAAgCrD,IACtCzP,EAAAA,EAAAA,GAC2B,oBAAnByP,EAAO+L,QACd,uCAEDxb,EAAAA,EAAAA,GACyB,oBAAjByP,EAAOf,MACd,qCAED1O,EAAAA,EAAAA,GACwB,oBAAhByP,EAAOyB,KACd,uC,CE2DAsP,CAAuB/Q,GAEvB,IAAMc,EAAWpO,KAAKoe,WAAW7B,EAAYY,OAAQxM,EAAMrD,GAE3D,OADAtN,KAAKsX,MAAM9D,SJ5EN,SAAmBpF,GACzB,MAAO,CACNuC,KAAM8L,EACN5H,QAAS,CACRzG,SAAAA,G,CIwEmBkQ,CAAUlQ,IACvBA,C,GACP,CAAAxQ,IAAA,kBAAAsC,MAED,SAAuBqe,GACtB,OACCjB,GAAiBtd,KAAK+d,YAAaQ,IACnCjB,GAAiBtd,KAAKge,YAAaO,E,GAEpC,CAAA3gB,IAAA,YAAAsC,MAED,SAAiBuL,GAAqD,IAAnC+S,EAAavgB,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,IAAAA,UAAA,GAI/C,OAHAJ,EAAAA,EAAAA,GAAUmC,KAAKye,WAAWhT,GAAW,+BACpB+S,GAAiB/S,IAAazL,KAAKie,eAC1Bje,KAAKke,aAAele,KAAK+d,YAAYlc,IAAI4J,E,GAEnE,CAAA7N,IAAA,YAAAsC,MAED,SAAiBkO,GAEhB,OADAvQ,EAAAA,EAAAA,GAAUmC,KAAK0e,WAAWtQ,GAAW,+BAC9BpO,KAAKge,YAAYnc,IAAIuM,E,GAC5B,CAAAxQ,IAAA,gBAAAsC,MAED,SAAqBuL,GAEpB,OADA5N,EAAAA,EAAAA,GAAUmC,KAAKye,WAAWhT,GAAW,+BAC9BzL,KAAKiE,MAAMpC,IAAI4J,E,GACtB,CAAA7N,IAAA,gBAAAsC,MAED,SAAqBkO,GAEpB,OADAvQ,EAAAA,EAAAA,GAAUmC,KAAK0e,WAAWtQ,GAAW,+BAC9BpO,KAAKiE,MAAMpC,IAAIuM,E,GACtB,CAAAxQ,IAAA,aAAAsC,MAED,SAAkBmd,GAEjB,OADaD,EAAuBC,KACpBd,EAAYW,M,GAC5B,CAAAtf,IAAA,aAAAsC,MAED,SAAkBmd,GAEjB,OADaD,EAAuBC,KACpBd,EAAYY,M,GAC5B,CAAAvf,IAAA,eAAAsC,MAED,SAAoBuL,GAAwB,ILxHxBmQ,EKwHwBxb,EAAA,MAC3CvC,EAAAA,EAAAA,GAAUmC,KAAKkV,UAAUzJ,GAAW,gCACpCzL,KAAKsX,MAAM9D,SJhHN,SAAsB/H,GAC5B,MAAO,CACNkF,KAAM+L,EACN7H,QAAS,CACRpJ,SAAAA,G,CI4GmBM,CAAaN,IL1HdmQ,EK2Hd,WACJxb,EAAK2d,YAAYlO,OAAOpE,GACxBrL,EAAK6D,MAAM4L,OAAOpE,E,EL5HpB4Q,EAAUsC,YAAYrC,EAAYsC,OAAOhD,G,GK8HxC,CAAAhe,IAAA,eAAAsC,MAED,SAAoBkO,IACnBvQ,EAAAA,EAAAA,GAAUmC,KAAKkW,UAAU9H,GAAW,gCACpCpO,KAAKsX,MAAM9D,SJhHN,SAAsBpF,GAC5B,MAAO,CACNuC,KAAMgM,EACN9H,QAAS,CACRzG,SAAAA,G,CI4GmByQ,CAAazQ,IACjCpO,KAAKge,YAAYnO,OAAOzB,GACxBpO,KAAKiE,MAAM4L,OAAOzB,E,GAClB,CAAAxQ,IAAA,YAAAsC,MAED,SAAiBuL,GAChB,IAAMrO,EAAS4C,KAAKkV,UAAUzJ,IAC9B5N,EAAAA,EAAAA,GAAUT,EAAQ,gCAElB4C,KAAKie,eAAiBxS,EACtBzL,KAAKke,aAAe9gB,C,GACpB,CAAAQ,IAAA,cAAAsC,MAED,YACCrC,EAAAA,EAAAA,GAAUmC,KAAKke,aAAc,oCAE7Ble,KAAKie,eAAiB,KACtBje,KAAKke,aAAe,I,GACpB,CAAAtgB,IAAA,aAAAsC,MAED,SACC8c,EACArM,EACA4N,GAEA,IAAMtB,EAAKF,EAAiBC,GAO5B,OANAhd,KAAKiE,MAAMzD,IAAIyc,EAAItM,GACfqM,IAAST,EAAYW,OACxBld,KAAK+d,YAAYvd,IAAIyc,EAAIsB,GACfvB,IAAST,EAAYY,QAC/Bnd,KAAKge,YAAYxd,IAAIyc,EAAIsB,GAEnBtB,C,KACPa,CAAA,CAjH8B,GC/DnBgB,GAAiB,SAAIniB,EAAMC,GAAI,OAAcD,IAAMC,CAAC,ECsB1D,SAASqG,KAIP,IADRwQ,EAAqCxV,UAAAnB,OAAA,EAAAmB,UAAA,QAAAI,EAErC,OAAQoV,EAAO9C,MACd,KAAK6D,EACJ,MACD,KAAKgI,EACL,KAAKC,EACL,KAAKE,EACL,KAAKD,EACJ,OAAOvE,EAKR,QACC,OAAOC,EAGT,IAAA2G,EAA+CtL,EAAOoB,QAAOmK,EAAAD,EAArDlJ,UAAAA,OAAS,IAAAmJ,EAAG,GAAEA,EAAAC,EAAAF,EAAEG,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EACpCtf,EzBLA,SAAwCW,EAAaC,GAC3D,IAAMgd,EAAM,IAAI/S,IACV9J,EAAa,SAACC,GACnB4c,EAAI/c,IAAIG,EAAM4c,EAAI4B,IAAIxe,GAAQ4c,EAAK1b,IAAIlB,GAAmB,EAAI,E,EAE/DL,EAAOO,QAAQH,GACfH,EAAOM,QAAQH,GAEf,IAAMf,EAAc,GAMpB,OALA4d,EAAI1c,SAAQ,SAACue,EAAOxhB,GACL,IAAVwhB,GACHzf,EAAOmB,KAAKlD,E,IAGP+B,C,CyBTQ0f,CAAIxJ,EAAWqJ,GACxBI,EACL3f,EAAO7C,OAAS,IDrBX,SACNH,EACAC,GAEU,IADV2iB,EAAyBthB,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG6gB,GAE5B,GAAIniB,EAAEG,SAAWF,EAAEE,OAClB,OAAO,EAER,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAEG,SAAUC,EAC/B,IAAKwiB,EAAQ5iB,EAAEI,GAASH,EAAEG,IACzB,OAAO,EAGT,OAAO,C,CCQgByiB,CAAe3J,EAAWqJ,GAEjD,IAAKI,EACJ,OAAOnH,EAKR,IAAMsH,EAAwBP,EAAcA,EAAcpiB,OAAS,GAC7D4iB,EAAoB7J,EAAUA,EAAU/Y,OAAS,GAUvD,OATI2iB,IAA0BC,IACzBD,GACH9f,EAAOmB,KAAK2e,GAETC,GACH/f,EAAOmB,KAAK4e,IAIP/f,C,CCpER,SAAA4D,GAAA6G,EAAAxM,EAAAsC,G,sGAgBA,IAAMyf,GAAsB,CAC3BlG,0BAA2B,KAC3BD,oBAAqB,KACrBvR,aAAc,MAGR,SAAShF,KAMP,IFjBR2c,EACAC,EEWAlH,EAAY1a,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG0hB,GACflM,EAGExV,UAAAnB,OAAA,EAAAmB,UAAA,QAAAI,EAEMwW,EAAYpB,EAAZoB,QACR,OAAQpB,EAAO9C,MACd,KAAK0D,EACL,KAAKC,EACJ,MAAO,CACNmF,0BAA2B5E,EAAQD,mBACnC4E,oBAAqB3E,EAAQ5M,aAC7BA,aAAc4M,EAAQ5M,cAExB,KAAKuM,EACJ,OF5BFoL,EE4BqBjH,EAAM1Q,aF3B3B4X,EE2ByChL,EAAQ5M,cFzB5C2X,IAAYC,GAELD,GAAYC,GAGhBD,EAAQtZ,IAAMuZ,EAAQvZ,GAAKsZ,EAAQnY,IAAMoY,EAAQpY,EEqB/CkR,E,wUAEDpI,CAAA,GACHoI,EAAK,CACR1Q,aAAc4M,EAAQ5M,eAExB,KAAKyM,EACL,KAAKD,EACJ,OAAOkL,GACR,QACC,OAAOhH,E,CClDV,SAAApV,GAAA6G,EAAAxM,EAAAsC,G,ibAqBA,IAAMyf,GAAsB,CAC3BlP,SAAU,KACV9P,KAAM,KACN8K,SAAU,KACVoK,UAAW,GACXI,WAAY,KACZL,SAAS,EACTF,eAAgB,MAGV,SAASzS,KAWP,I3BzBkB7B,EAAYT,E2BetCgY,EAAY1a,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG0hB,GACflM,EAQExV,UAAAnB,OAAA,EAAAmB,UAAA,QAAAI,EAEMwW,EAAYpB,EAAZoB,QACR,OAAQpB,EAAO9C,MACd,KAAK2D,EACJ,OAAO/D,GAAA,GACHoI,EAAK,CACRlI,SAAUoE,EAAQpE,SAClB9P,KAAMkU,EAAQlU,KACd8K,SAAUoJ,EAAQpJ,SAClBiK,eAAgBb,EAAQa,eACxBO,WAAY,KACZL,SAAS,IAEX,KAAKrB,EACJ,OAAOhE,GAAA,GACHoI,EAAK,CACRjD,gBAAgB,IAElB,KAAKlB,EACJ,OAAOjE,GAAA,GACHoI,EAAK,CACR9C,UAAWhB,EAAQgB,YAErB,KAAK8G,EACJ,OAAmD,IAA/ChE,EAAM9C,UAAUvR,QAAQuQ,EAAQzG,UAC5BuK,EAEDpI,GAAA,GACHoI,EAAK,CACR9C,W3BtDuBzU,E2BsDJuX,EAAM9C,U3BtDUlV,E2BsDCkU,EAAQzG,S3BrDxChN,EAAMJ,QAAO,SAACjE,GAAC,OAAKA,IAAM4D,CAAI,O2BuDpC,KAAK8T,EACJ,OAAOlE,GAAA,GACHoI,EAAK,CACR1C,WAAYpB,EAAQoB,WACpBL,SAAS,EACTC,UAAW,KAEb,KAAKnB,EACJ,OAAOnE,GAAA,GACHoI,EAAK,CACRlI,SAAU,KACV9P,KAAM,KACN8K,SAAU,KACVwK,WAAY,KACZL,SAAS,EACTF,eAAgB,KAChBG,UAAW,KAEb,QACC,OAAO8C,E,CClFH,SAAS1V,KAAqD,IAA9C0V,EAAY1a,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,EACrC,QAD2DA,UAAAnB,OAAA,EAAAmB,UAAA,QAAAI,GAC5CsS,MACd,KAAK6L,EACL,KAAKC,EACJ,OAAO9D,EAAQ,EAChB,KAAK+D,EACL,KAAKC,EACJ,OAAOhE,EAAQ,EAChB,QACC,OAAOA,E,CCjBH,SAAS1V,KACf,OADkChF,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,GACtB,C,CCHhB,SAAAsF,GAAA6G,EAAAxM,EAAAsC,G,ibAqBO,SAAS+C,KAA+D,I9BbxDmH,EAAU0V,EAAc9c,E8BaxB2V,EAAY1a,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAYwV,EAAmBxV,UAAAnB,OAAA,EAAAmB,UAAA,QAAAI,EACrE,MAAO,CACN2a,gBAAiBA,GAAgBL,EAAMK,gBAAiB,CACvDrI,KAAM8C,EAAO9C,KACbkE,QAAStE,GAAA,GACLkD,EAAOoB,QAAO,CACjBqK,e9BnBmB9U,E8BmBUuO,E9BnBAmH,E8BmBO,0B9BnBO9c,E8BmBoB,G9BlB3D8c,EACLjc,MAAM,KACNZ,QAAO,SAACtG,EAAGojB,GAAC,OAAMpjB,GAAKA,EAAEojB,GAAKpjB,EAAEojB,GAAK/c,GAAgB,IAAI,GAAGoH,Q8BmB7D8O,WAAYA,GAAWP,EAAMO,WAAYzF,GACzCiE,SAAUA,GAASiB,EAAMjB,SAAUjE,GACnC8F,cAAeA,GAAcZ,EAAMY,cAAe9F,GAClDiF,QAASA,GAAQC,EAAMD,S,CCvBlB,SAASsH,GACfC,GAIkB,IAHlBlW,EAAsB9L,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,QAAGI,EACzB6hB,EAAuBjiB,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGrBqZ,EAQP,SAA2B6I,GAG1B,IAAMC,EACa,qBAAXvb,QACPA,OAAgBwb,6BACjB,OAAO9N,EACNtP,GACAkd,GACCC,GACAA,EAAc,CACb1hB,KAAM,WACN4hB,WAAY,a,CApBDC,CAFLtiB,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,IAAAA,UAAA,IAGHsE,EAAU,IAAIgW,EAAoBjB,EAAO,IAAIwG,GAAoBxG,IACjEhN,EAAU,IAAI+M,EAAoBC,EAAO/U,GACzCoV,EAAUsI,EAAe3V,EAASP,EAAemW,GAEvD,OADA5V,EAAQkW,eAAe7I,GAChBrN,C,2BCrBR,SAAAmW,GAAArjB,EAAAsjB,G,oWAoBA,IAAIhJ,GAAW,EACTiJ,GAAejP,OAAOkP,IAAI,kCAKnBC,IAAsDC,EAAAA,GAAAA,OAClE,SAAqBC,GAAA,IAAEC,EAAFD,EAAEC,SACtBC,EAwBF,SAA4BC,GAC3B,GAAI,YAAaA,EAAO,CAEvB,MAAO,CADS,CAAE5P,gBAAiB4P,EAAM5W,UACxB,E,CAGlB,IAAMA,EAWP,SACCqN,GAIC,IAHDxG,EAAuBlT,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAGkjB,KAC1BnX,EAAuB/L,UAAAnB,OAAA,EAAAmB,UAAA,QAAAI,EACvB8hB,EAAmBliB,UAAAnB,OAAA,EAAAmB,UAAA,QAAAI,EAEb+iB,EAAMjQ,EACPiQ,EAAIT,MACRS,EAAIT,IAAgB,CACnBrP,gBAAiB0O,GAChBrI,EACAxG,EACAnH,EACAmW,KAIH,OAAOiB,EAAIT,G,CA5BKU,CACfH,EAAMvJ,QACNuJ,EAAM/P,QACN+P,EAAMlX,QACNkX,EAAMf,WAEDmB,GAAoBJ,EAAM/P,QAEhC,MAAO,CAAC7G,EAASgX,E,CAtCoBC,CADId,GAApBM,EAAsB,CAApB,cACuCS,GAAA3D,EAAAA,EAAAA,GAAAoD,EAAA,GAAtD3W,EAAOkX,EAAA,GAAEF,EAAgBE,EAAA,GAoBhC,OAdAC,EAAAA,GAAAA,YAAU,WACT,GAAIH,EAAkB,CACrB,IAAMnQ,EAAUgQ,KAGhB,QAFEzJ,GAEK,WACa,MAAbA,KACLvG,EAAQwP,IAAgB,K,KAKzB,KAEIe,EAAAA,EAAAA,KAACtQ,GAAAA,EAAAA,SAAmB,CAAClR,MAAOoK,E,SAAU0W,G,IA0C/C,SAASG,KACR,MAAyB,qBAAXvH,OAAyBA,OAAU/U,M,oGCvF3C,SAAS8c,EACfpf,EACAqf,EACAC,GAEA,IAAAC,ECEM,SACNvf,EACAqf,EACAG,GAEA,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,kBAAML,EAAQrf,EAAQ,IAAC2f,GAAArE,EAAAA,EAAAA,GAAAmE,EAAA,GAA3DG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,GAAkBC,EAAAA,EAAAA,cAAY,WACnC,IAAMC,EAAYX,EAAQrf,GAGrB7F,EAAMylB,EAAWI,KACrBH,EAAaG,GACTR,GACHA,I,GAGA,CAACI,EAAW5f,EAASwf,IAOxB,OAFAS,EAAAA,EAAAA,GAA0BH,GAEnB,CAACF,EAAWE,E,CD1BkBI,CAAalgB,EAASqf,EAASC,GAAUa,GAAA7E,EAAAA,EAAAA,GAAAiE,EAAA,GAAvEK,EAASO,EAAA,GAAEL,EAAeK,EAAA,GAejC,OAbAF,EAAAA,EAAAA,IACC,WACC,IAAMnF,EAAY9a,EAAQogB,eAC1B,GAAiB,MAAbtF,EAGJ,OAAO9a,EAAQqgB,uBAAuBP,EAAiB,CACtD7J,WAAY,CAAC6E,I,GAGf,CAAC9a,EAAS8f,IAGJF,C,CEpBD,SAASU,EACfC,EACAvgB,EACAwgB,GAEA,OAAOpB,EAAiBpf,EAASugB,GAAc,iBAAO,CAAC,CAAC,GAAiB,kBACxEC,EAAUC,WAAW,G,0FCDhB,SAASC,IACf,IAAQ3R,GAAoB4R,EAAAA,EAAAA,YAAW9R,EAAAA,GAA/BE,gBAER,OADAzT,EAAAA,EAAAA,GAA6B,MAAnByT,EAAyB,8BAC5BA,C,oGCRD,SAAS6R,EAAqBJ,GACpC,OAAOK,EAAAA,EAAAA,UAAQ,kBAAML,EAAUM,MAAMC,YAAY,GAAE,CAACP,G,CAG9C,SAASQ,EAAsBR,GACrC,OAAOK,EAAAA,EAAAA,UAAQ,kBAAML,EAAUM,MAAMrb,aAAa,GAAE,CAAC+a,G,qDCMzCS,EAAe,WAgD3B,SAAAA,EAAmB7L,GAAkB,IAAAvX,EAAA,MAAAN,EAAAA,EAAAA,GAAA,KAAA0jB,GA/CrC,KAAOH,OAAQI,EAAAA,EAAAA,GAAmB,CACjCH,WAAY,SACXriB,EACA+I,GAEA5J,EAAKsjB,kBACLtjB,EAAKujB,kBAAoB3Z,GAAW,MAChC4Z,EAAAA,EAAAA,GAAM3iB,GACTb,EAAKyjB,cAAgB5iB,EAErBb,EAAK0jB,eAAiB7iB,EAEvBb,EAAK2jB,qB,EAEN/b,YAAa,SAAC/G,EAAW+I,GACxB5J,EAAK4jB,mBACL5jB,EAAK6jB,mBAAqBja,GAAW,MACjC4Z,EAAAA,EAAAA,GAAM3iB,GACTb,EAAK8jB,eAAiBjjB,EAEtBb,EAAK+jB,gBAAkBljB,EAExBb,EAAKgkB,sB,IAGP,KAAQ/G,UAA+B,KAGvC,KAAQwG,cAAuC,KAE/C,KAAQQ,0BAAsD,KAI9D,KAAQH,eAAwC,KAEhD,KAAQI,2BAAwD,KAGhE,KAAQC,uBAA4C,KACpD,KAAQC,wBAA+B,KACvC,KAAQC,+BAAsC,KAC9C,KAAQC,yBAAgC,KACxC,KAAQC,gCAAuC,KAK9C3kB,KAAK2X,QAAUA,C,CAqKf,OApKA1X,EAAAA,EAAAA,GAAAujB,EAAA,EAAA5lB,IAAA,mBAAAsC,MAED,SAAwB0kB,GACnB5kB,KAAKqd,YAAcuH,IAIvB5kB,KAAKqd,UAAYuH,EACjB5kB,KAAKgjB,Y,GACL,CAAAplB,IAAA,gBAAAiE,IAED,WACC,OAAO7B,KAAKsjB,U,GACZ,CAAA1lB,IAAA,oBAAAiE,IAED,WACC,OAAO7B,KAAKqkB,yB,EACZ7jB,IACD,SAA6BwJ,GAC5BhK,KAAKqkB,0BAA4Bra,C,GACjC,CAAApM,IAAA,qBAAAiE,IAED,WACC,OAAO7B,KAAKskB,0B,EACZ9jB,IAED,SAA8BwJ,GAC7BhK,KAAKskB,2BAA6Bta,C,GAClC,CAAApM,IAAA,YAAAsC,MAED,WACC,IAAMof,EAAYtf,KAAK+jB,sBACvB/jB,KAAKokB,qBAAqB9E,E,GAC1B,CAAA1hB,IAAA,sBAAAsC,MAED,WACC,IAAMojB,EAAatjB,KAAKsjB,WAElBhE,EACLtf,KAAK6kB,sBACL7kB,KAAK8kB,gCACL9kB,KAAK+kB,6BAMN,OAJIzF,GACHtf,KAAKglB,uBAGDhlB,KAAKqd,UAGLiG,GAKDhE,IACHtf,KAAKukB,uBAAyBvkB,KAAKqd,UACnCrd,KAAKwkB,wBAA0BlB,EAC/BtjB,KAAKykB,+BAAiCzkB,KAAK2jB,kBAC3C3jB,KAAKilB,sBAAwBjlB,KAAK2X,QAAQuN,kBACzCllB,KAAKqd,UACLiG,EACAtjB,KAAK2jB,oBAGArE,IAdNtf,KAAKwkB,wBAA0BlB,EACxBhE,GAJAA,C,GAkBR,CAAA1hB,IAAA,uBAAAsC,MAED,WAA2D,IAA9BilB,EAAclnB,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,IAAAA,UAAA,GACpC+J,EAAchI,KAAKgI,YAEnBsX,EACL6F,GACAnlB,KAAK6kB,sBACL7kB,KAAKolB,iCACLplB,KAAKqlB,8BAEF/F,GACHtf,KAAKslB,wBAGDtlB,KAAKqd,YAGLrV,EAKDsX,IACHtf,KAAKukB,uBAAyBvkB,KAAKqd,UACnCrd,KAAK0kB,yBAA2B1c,EAChChI,KAAK2kB,gCAAkC3kB,KAAKikB,mBAC5CjkB,KAAKulB,uBAAyBvlB,KAAK2X,QAAQ6N,mBAC1CxlB,KAAKqd,UACLrV,EACAhI,KAAKikB,qBAXNjkB,KAAK0kB,yBAA2B1c,E,GAcjC,CAAApK,IAAA,qBAAAsC,MAED,WACC,OAAOF,KAAKukB,yBAA2BvkB,KAAKqd,S,GAC5C,CAAAzf,IAAA,+BAAAsC,MAED,WACC,OAAOF,KAAKwkB,0BAA4BxkB,KAAKsjB,U,GAC7C,CAAA1lB,IAAA,gCAAAsC,MAED,WACC,OAAOF,KAAK0kB,2BAA6B1kB,KAAKgI,W,GAC9C,CAAApK,IAAA,6BAAAsC,MAED,WACC,QAAQtB,EAAAA,EAAAA,GACPoB,KAAKykB,+BACLzkB,KAAK2jB,kB,GAEN,CAAA/lB,IAAA,8BAAAsC,MAED,WACC,QAAQtB,EAAAA,EAAAA,GACPoB,KAAK2kB,gCACL3kB,KAAKikB,mB,GAEN,CAAArmB,IAAA,uBAAAsC,MAED,WACKF,KAAKilB,wBACRjlB,KAAKilB,wBACLjlB,KAAKilB,2BAAwB5mB,E,GAE9B,CAAAT,IAAA,wBAAAsC,MAED,WACKF,KAAKulB,yBACRvlB,KAAKulB,yBACLvlB,KAAKulB,4BAAyBlnB,EAC9B2B,KAAKmkB,gBAAkB,KACvBnkB,KAAKkkB,eAAiB,K,GAEvB,CAAAtmB,IAAA,aAAAiE,IAED,WACC,OACC7B,KAAK8jB,gBAAmB9jB,KAAK6jB,eAAiB7jB,KAAK6jB,cAAc4B,O,GAElE,CAAA7nB,IAAA,cAAAiE,IAED,WACC,OACC7B,KAAKmkB,iBACJnkB,KAAKkkB,gBAAkBlkB,KAAKkkB,eAAeuB,O,GAE7C,CAAA7nB,IAAA,kBAAAsC,MAED,WACCF,KAAK8jB,eAAiB,KACtB9jB,KAAK6jB,cAAgB,I,GACrB,CAAAjmB,IAAA,mBAAAsC,MAED,WACCF,KAAKmkB,gBAAkB,KACvBnkB,KAAKkkB,eAAiB,I,KACtBV,CAAA,CAtN0B,G,oBCH5B,IAAIkC,GAAmB,EACnBC,GAAsB,EAEbC,EAAqB,WAIjC,SAAAA,EAAmBtb,IAA0BxK,EAAAA,EAAAA,GAAA,KAAA8lB,GAF7C,KAAQna,SAA8B,KAGrCzL,KAAK6lB,gBAAkBvb,EAAQ+E,Y,CAwH/B,OAvHApP,EAAAA,EAAAA,GAAA2lB,EAAA,EAAAhoB,IAAA,mBAAAsC,MAED,SAAwBuL,GACvBzL,KAAKyL,SAAWA,C,GAChB,CAAA7N,IAAA,eAAAsC,MAED,WACC,OAAOF,KAAKyL,Q,GACZ,CAAA7N,IAAA,UAAAsC,MAED,YACCrC,EAAAA,EAAAA,IACE6nB,EACD,yJAID,IAEC,OADAA,GAAmB,EACZ1lB,KAAK6lB,gBAAgBzQ,cAAcpV,KAAKyL,S,CAC9C,QACDia,GAAmB,C,IAEpB,CAAA9nB,IAAA,aAAAsC,MAED,WACC,IAAKF,KAAKyL,SACT,OAAO,GAER5N,EAAAA,EAAAA,IACE8nB,EACD,+JAID,IAEC,OADAA,GAAsB,EACf3lB,KAAK6lB,gBAAgBC,iBAAiB9lB,KAAKyL,S,CACjD,QACDka,GAAsB,C,IAEvB,CAAA/nB,IAAA,yBAAAsC,MAED,SACCkT,EACApJ,GAEA,OAAOhK,KAAK6lB,gBAAgBjD,uBAAuBxP,EAAUpJ,E,GAC7D,CAAApM,IAAA,mBAAAsC,MAED,SAAwBuL,GACvB,OAAOzL,KAAK6lB,gBAAgBC,iBAAiBra,E,GAC7C,CAAA7N,IAAA,eAAAsC,MAED,SACCkO,EACApE,GAEA,OAAOhK,KAAK6lB,gBAAgBE,aAAa3X,EAAUpE,E,GACnD,CAAApM,IAAA,eAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgB/P,c,GAC5B,CAAAlY,IAAA,iBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBnQ,gB,GAC5B,CAAA9X,IAAA,cAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBpjB,a,GAC5B,CAAA7E,IAAA,0BAAAsC,MAED,SAA+BkT,GAC9B,OAAOpT,KAAK6lB,gBAAgBG,wBAAwB5S,E,GACpD,CAAAxV,IAAA,gBAAAsC,MAED,SAAqBuL,GACpB,OAAOzL,KAAK6lB,gBAAgBzQ,cAAc3J,E,GAC1C,CAAA7N,IAAA,kBAAAsC,MAED,SAAuBkO,GACtB,OAAOpO,KAAK6lB,gBAAgBxX,gBAAgBD,E,GAC5C,CAAAxQ,IAAA,cAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBnV,a,GAC5B,CAAA9S,IAAA,UAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBI,S,GAC5B,CAAAroB,IAAA,gBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBzP,e,GAC5B,CAAAxY,IAAA,UAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBjQ,S,GAC5B,CAAAhY,IAAA,yBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBK,wB,GAC5B,CAAAtoB,IAAA,+BAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBM,8B,GAC5B,CAAAvoB,IAAA,wBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBra,uB,GAC5B,CAAA5N,IAAA,kBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBO,iB,GAC5B,CAAAxoB,IAAA,iCAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBnM,gC,KAC5BkM,CAAA,CA7HgC,G,wBCTrBS,EAAc,WAC1B,SAAAA,EACQC,EACC/jB,EACAwgB,IACPjjB,EAAAA,EAAAA,GAAA,KAAAumB,G,KAHMC,KAAAA,E,KACC/jB,QAAAA,E,KACAwgB,UAAAA,C,CAgDR,OA/CG9iB,EAAAA,EAAAA,GAAAomB,EAAA,EAAAzoB,IAAA,YAAAsC,MAEJ,WACC,IAAMomB,EAAOtmB,KAAKsmB,KACZ/jB,EAAUvC,KAAKuC,QAEjB5C,EAAmB,KAQvB,OAAa,QANZA,EADwB,kBAAd2mB,EAAK3lB,KACN2lB,EAAK3lB,KACiB,oBAAd2lB,EAAK3lB,KACb2lB,EAAM3lB,KAA8B4B,GAEpC,CAAC,SAEE,IAAN5C,EAAAA,EAAU,I,GACjB,CAAA/B,IAAA,UAAAsC,MAED,WACC,IAAMomB,EAAOtmB,KAAKsmB,KACZ/jB,EAAUvC,KAAKuC,QACrB,MAA4B,mBAAjB+jB,EAAKlN,QACRkN,EAAKlN,QACsB,oBAAjBkN,EAAKlN,SACfkN,EAAKlN,QAAQ7W,E,GAIrB,CAAA3E,IAAA,aAAAsC,MAED,SAAkBqmB,EAAgCjZ,GACjD,IAAMgZ,EAAOtmB,KAAKsmB,KACZ/jB,EAAUvC,KAAKuC,QACb4J,EAAema,EAAfna,WACR,OAAOA,EACJA,EAAW5J,GACX+K,IAAWiZ,EAAc9jB,a,GAC5B,CAAA7E,IAAA,UAAAsC,MAED,WACC,IAAMomB,EAAOtmB,KAAKsmB,KACZ/jB,EAAUvC,KAAKuC,QACfwgB,EAAY/iB,KAAK+iB,UACfyD,EAAQF,EAARE,IACJA,GACHA,EAAIjkB,EAAQ0jB,UAAW1jB,GAExBwgB,EAAUC,W,KACVqD,CAAA,CApDyB,GCGpB,SAASI,EACfH,EACA/jB,EACAwgB,GAEA,IAAMzY,GAAU2Y,EAAAA,EAAAA,KACV1E,ECRA,SACN+H,EACA/jB,EACAwgB,GAEA,IAAMxE,GAAU6E,EAAAA,EAAAA,UACf,kBAAM,IAAIiD,EAAeC,EAAM/jB,EAASwgB,EAAU,GAClD,CAACxgB,EAASwgB,IAKX,OAHAtB,EAAAA,EAAAA,YAAU,WACTlD,EAAQ+H,KAAOA,C,GACb,CAACA,IACG/H,C,CDJSmI,CAAcJ,EAAM/jB,EAASwgB,GACvCtS,EEVA,SACN6V,GAEA,OAAOlD,EAAAA,EAAAA,UAAQ,WACd,IAAMzjB,EAAqB2mB,EAAK3V,KAEhC,OADA9S,EAAAA,EAAAA,GAAoB,MAAV8B,EAAgB,6BACnBA,C,GACL,CAAC2mB,G,CFGaK,CAAYL,IAE7B9D,EAAAA,EAAAA,IACC,WACC,GAAgB,MAAZ/R,EAAkB,CACrB,IAAAmW,GAAgCC,EAAAA,EAAAA,GAC/BpW,EACA8N,EACAjU,GACAwc,GAAAjJ,EAAAA,EAAAA,GAAA+I,EAAA,GAJMvJ,EAASyJ,EAAA,GAAEC,EAAUD,EAAA,GAO5B,OAFAvkB,EAAQykB,iBAAiB3J,GACzB0F,EAAUiE,iBAAiB3J,GACpB0J,C,IAIT,CAACzc,EAAS/H,EAASwgB,EAAWxE,EAAS9N,G,CGblC,SAASwW,EAKfC,EAGAC,GAEA,IAAMb,GAAOc,EAAAA,EAAAA,GAAmBF,EAASC,IACzCtpB,EAAAA,EAAAA,IACEyoB,EAAce,MAAK,+JAIrB,IAAM9kB,EC7BA,WACN,IAAM+H,GAAU2Y,EAAAA,EAAAA,KAChB,OAAOG,EAAAA,EAAAA,UACN,kBAAM,IAAIwC,EAAsBtb,EAAQ,GACxC,CAACA,G,CDyBcgd,GACVvE,EE1BA,SACNY,EACAM,GAEA,IAAM3Z,GAAU2Y,EAAAA,EAAAA,KACVF,GAAYK,EAAAA,EAAAA,UACjB,kBAAM,IAAII,EAAgBlZ,EAAQid,aAAa,GAC/C,CAACjd,IAYF,OAVAkY,EAAAA,EAAAA,IAA0B,WAGzB,OAFAO,EAAUY,kBAAoBA,GAAqB,KACnDZ,EAAUC,YACH,kBAAMD,EAAUiC,sBAAsB,C,GAC3C,CAACjC,EAAWY,KACfnB,EAAAA,EAAAA,IAA0B,WAGzB,OAFAO,EAAUkB,mBAAqBA,GAAsB,KACrDlB,EAAUC,YACH,kBAAMD,EAAUuC,uBAAuB,C,GAC5C,CAACvC,EAAWkB,IACRlB,C,CFOWyE,CAAuBlB,EAAKtc,QAASsc,EAAKmB,gBAG5D,OAFAhB,EAAwBH,EAAM/jB,EAASwgB,GAEhC,EACNF,EAAAA,EAAAA,GAAkByD,EAAK1E,QAASrf,EAASwgB,GACzCI,EAAqBJ,GACrBQ,EAAsBR,G,0FGtCjB,SAAS2E,EAAqB3E,GACpC,OAAOK,EAAAA,EAAAA,UAAQ,kBAAML,EAAUM,MAAMsE,YAAY,GAAE,CAAC5E,G,qDCIxC6E,EAAe,WA0B3B,SAAAA,EAAmBjQ,GAAkB,IAAAvX,EAAA,MAAAN,EAAAA,EAAAA,GAAA,KAAA8nB,GAzBrC,KAAOvE,OAAQI,EAAAA,EAAAA,GAAmB,CACjCkE,WAAY,SAAC1mB,EAAW+I,GACvB5J,EAAKynB,kBACLznB,EAAK0nB,kBAAoB9d,GACrB4Z,EAAAA,EAAAA,GAAM3iB,GACTb,EAAK2nB,cAAgB9mB,EAErBb,EAAK4nB,eAAiB/mB,EAEvBb,EAAK4iB,W,IAIP,KAAQ3F,UAA+B,KAEvC,KAAQ0K,cAAuC,KAE/C,KAAQE,0BAAsD,KAG9D,KAAQ1D,uBAA4C,KACpD,KAAQ2D,wBAA+B,KACvC,KAAQC,+BAA2D,KAIlEnoB,KAAK2X,QAAUA,C,CAuFf,OAtFA1X,EAAAA,EAAAA,GAAA2nB,EAAA,EAAAhqB,IAAA,gBAAAiE,IAED,WACC,OAAO7B,KAAK2nB,U,GACZ,CAAA/pB,IAAA,YAAAsC,MAED,WAEC,IAAMof,EACLtf,KAAK6kB,sBACL7kB,KAAKooB,uBACLpoB,KAAKqoB,mBAEF/I,GACHtf,KAAKsoB,uBAGN,IAAMX,EAAa3nB,KAAK2nB,WACnB3nB,KAAKqd,YAGLsK,EAKDrI,IACHtf,KAAKukB,uBAAyBvkB,KAAKqd,UACnCrd,KAAKkoB,wBAA0BP,EAC/B3nB,KAAKmoB,+BAAiCnoB,KAAK8nB,kBAE3C9nB,KAAKuoB,sBAAwBvoB,KAAK2X,QAAQ6Q,kBACzCxoB,KAAKqd,UACLsK,EACA3nB,KAAK8nB,oBAZN9nB,KAAKkoB,wBAA0BP,E,GAehC,CAAA/pB,IAAA,mBAAAsC,MAED,SAAwB0kB,GACnBA,IAAiB5kB,KAAKqd,YAI1Brd,KAAKqd,UAAYuH,EACjB5kB,KAAKgjB,Y,GACL,CAAAplB,IAAA,oBAAAiE,IAED,WACC,OAAO7B,KAAKioB,yB,EACZznB,IACD,SAA6BwJ,GAC5BhK,KAAKioB,0BAA4Bje,C,GACjC,CAAApM,IAAA,qBAAAsC,MAED,WACC,OAAOF,KAAKukB,yBAA2BvkB,KAAKqd,S,GAC5C,CAAAzf,IAAA,sBAAAsC,MAED,WACC,OAAOF,KAAKkoB,0BAA4BloB,KAAK2nB,U,GAC7C,CAAA/pB,IAAA,mBAAAsC,MAED,WACC,QAAQtB,EAAAA,EAAAA,GACPoB,KAAKmoB,+BACLnoB,KAAK8nB,kB,GAEN,CAAAlqB,IAAA,uBAAAsC,MAED,WACKF,KAAKuoB,wBACRvoB,KAAKuoB,wBACLvoB,KAAKuoB,2BAAwBlqB,E,GAE9B,CAAAT,IAAA,aAAAiE,IAED,WACC,OACC7B,KAAKgoB,gBAAmBhoB,KAAK+nB,eAAiB/nB,KAAK+nB,cAActC,O,GAElE,CAAA7nB,IAAA,kBAAAsC,MAED,WACCF,KAAK+nB,cAAgB,KACrB/nB,KAAKgoB,eAAiB,I,KACtBJ,CAAA,CAlH0B,G,kCCGxBa,GAAmB,EAEVC,EAAqB,WAIjC,SAAAA,EAAmBpe,IAA0BxK,EAAAA,EAAAA,GAAA,KAAA4oB,GAF7C,KAAQta,SAA8B,KAGrCpO,KAAK6lB,gBAAkBvb,EAAQ+E,Y,CAgF/B,OA/EApP,EAAAA,EAAAA,GAAAyoB,EAAA,EAAA9qB,IAAA,mBAAAsC,MAED,SAAwBkO,GACvBpO,KAAKoO,SAAWA,C,GAChB,CAAAxQ,IAAA,eAAAsC,MAED,WACC,OAAOF,KAAKoO,Q,GACZ,CAAAxQ,IAAA,yBAAAsC,MAED,SACCkT,EACApJ,GAEA,OAAOhK,KAAK6lB,gBAAgBjD,uBAAuBxP,EAAUpJ,E,GAC7D,CAAApM,IAAA,UAAAsC,MAED,WAIC,IAAKF,KAAKoO,SACT,OAAO,GAERvQ,EAAAA,EAAAA,IACE4qB,EACD,yJAID,IAEC,OADAA,GAAmB,EACZzoB,KAAK6lB,gBAAgBxX,gBAAgBrO,KAAKoO,S,CAChD,QACDqa,GAAmB,C,IAEpB,CAAA7qB,IAAA,SAAAsC,MAED,SAAc8J,GACb,QAAKhK,KAAKoO,UAGHpO,KAAK6lB,gBAAgBE,aAAa/lB,KAAKoO,SAAUpE,E,GACxD,CAAApM,IAAA,cAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBnV,a,GAC5B,CAAA9S,IAAA,UAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBI,S,GAC5B,CAAAroB,IAAA,gBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBzP,e,GAC5B,CAAAxY,IAAA,UAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBjQ,S,GAC5B,CAAAhY,IAAA,yBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBK,wB,GAC5B,CAAAtoB,IAAA,+BAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBM,8B,GAC5B,CAAAvoB,IAAA,wBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBra,uB,GAC5B,CAAA5N,IAAA,kBAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBO,iB,GAC5B,CAAAxoB,IAAA,iCAAAsC,MAED,WACC,OAAOF,KAAK6lB,gBAAgBnM,gC,KAC5BgP,CAAA,CArFgC,G,wBCT3B,IAAMC,EAAc,WAC1B,SAAAA,EACQrC,EACC/jB,IACPzC,EAAAA,EAAAA,GAAA,KAAA6oB,G,KAFMrC,KAAAA,E,KACC/jB,QAAAA,C,CAwBR,OAvBGtC,EAAAA,EAAAA,GAAA0oB,EAAA,EAAA/qB,IAAA,UAAAsC,MAEJ,WACC,IAAMomB,EAAOtmB,KAAKsmB,KACZ/jB,EAAUvC,KAAKuC,QACrB,OAAO+jB,EAAKjN,SAAUiN,EAAKjN,QAAQ9W,EAAQ0jB,UAAW1jB,E,GACtD,CAAA3E,IAAA,QAAAsC,MAED,WACC,IAAMomB,EAAOtmB,KAAKsmB,KACZ/jB,EAAUvC,KAAKuC,QACjB+jB,EAAK/Z,OACR+Z,EAAK/Z,MAAMhK,EAAQ0jB,UAAW1jB,E,GAE/B,CAAA3E,IAAA,OAAAsC,MAED,WACC,IAAMomB,EAAOtmB,KAAKsmB,KACZ/jB,EAAUvC,KAAKuC,QACrB,GAAI+jB,EAAKvX,KACR,OAAOuX,EAAKvX,KAAKxM,EAAQ0jB,UAAW1jB,E,KAGrComB,CAAA,CA3ByB,GCIpB,SAASC,EACftC,EACA/jB,EACAwgB,GAEA,IAAMzY,GAAU2Y,EAAAA,EAAAA,KACV0E,ECTA,SACNrB,EACA/jB,GAEA,IAAMolB,GAAavE,EAAAA,EAAAA,UAAQ,kBAAM,IAAIuF,EAAerC,EAAM/jB,EAAQ,GAAE,CAACA,IAIrE,OAHAkf,EAAAA,EAAAA,YAAU,WACTkG,EAAWrB,KAAOA,C,GAChB,CAACA,IACGqB,C,CDCYkB,CAAcvC,EAAM/jB,GACjCumB,EELA,SACNxC,GAEA,IAAQwC,EAAWxC,EAAXwC,OACR,OAAO1F,EAAAA,EAAAA,UAAQ,WAEd,OADAvlB,EAAAA,EAAAA,GAAyB,MAAfyoB,EAAKwC,OAAgB,0BACxB7rB,MAAMC,QAAQ4rB,GAAUA,EAAS,CAACA,E,GACvC,CAACA,G,CFFWC,CAAUzC,IAEzB9D,EAAAA,EAAAA,IACC,WACC,IAAAwG,GAAgCC,EAAAA,EAAAA,GAC/BH,EACAnB,EACArd,GACA4e,GAAArL,EAAAA,EAAAA,GAAAmL,EAAA,GAJM3L,EAAS6L,EAAA,GAAEnC,EAAUmC,EAAA,GAO5B,OAFA3mB,EAAQykB,iBAAiB3J,GACzB0F,EAAUiE,iBAAiB3J,GACpB0J,C,GAER,CACCzc,EACA/H,EACAolB,EACA5E,EACA+F,EAAOvL,KAAI,SAAC5gB,GAAC,OAAKA,EAAEc,UAAU,IAAEsU,KAAK,M,CGpBjC,SAASoX,EAKfjC,EAGAC,GAEA,IAAMb,GAAOc,EAAAA,EAAAA,GAAmBF,EAASC,GACnC5kB,ECnBA,WACN,IAAM+H,GAAU2Y,EAAAA,EAAAA,KAChB,OAAOG,EAAAA,EAAAA,UAAQ,kBAAM,IAAIsF,EAAsBpe,EAAQ,GAAE,CAACA,G,CDiB1C8e,GACVrG,EEnBA,SACN/Y,GAEA,IAAMM,GAAU2Y,EAAAA,EAAAA,KACVF,GAAYK,EAAAA,EAAAA,UACjB,kBAAM,IAAIwE,EAAgBtd,EAAQid,aAAa,GAC/C,CAACjd,IAOF,OALAkY,EAAAA,EAAAA,IAA0B,WAGzB,OAFAO,EAAU+E,kBAAoB9d,GAAW,KACzC+Y,EAAUC,YACH,kBAAMD,EAAUuF,sBAAsB,C,GAC3C,CAACte,IACG+Y,C,CFMWsG,CAAuB/C,EAAKtc,SAG9C,OAFA4e,EAAwBtC,EAAM/jB,EAASwgB,GAEhC,EACNF,EAAAA,EAAAA,GAAkByD,EAAK1E,QAASrf,EAASwgB,GACzC2E,EAAqB3E,G,sEG5BVP,EACM,qBAAX3d,OAAyBykB,EAAAA,gBAAkB7H,EAAAA,S,+ECA5C,SAAS2F,EACfmC,EACApC,GAEA,IAAMqC,GAAQC,EAAAA,EAAAA,GAAQtC,GAAQ,IAI9B,OAHY,MAARA,GAA+B,oBAARoC,GAC1BC,EAAS1oB,KAAKyoB,IAERnG,EAAAA,EAAAA,UAAW,WACjB,MAAsB,oBAARmG,EAAqBA,IAAsBA,C,GACvDC,E,wBCVG,SAAS5F,EAAMxZ,GACrB,OAES,OAARA,GACe,kBAARA,GACP7M,OAAOC,UAAUE,eAAeC,KAAKyM,EAAK,U,uDCCrC,SAAS6e,EACftY,EACArD,EACAhD,GAEA,IAAMwB,EAAWxB,EAAQgF,cACnBlB,EAAWtC,EAASwS,UAAU3N,EAAMrD,GAE1C,MAAO,CAACc,EAAU,kBAAMtC,EAAS+S,aAAazQ,EAAS,E,CAGjD,SAASyY,EACflW,EACAvT,EACAkN,GAEA,IAAMwB,EAAWxB,EAAQgF,cACnB7D,EAAWK,EAAS+E,UAAUF,EAAMvT,GAE1C,MAAO,CAACqO,EAAU,kBAAMK,EAASC,aAAaN,EAAS,E,qICRxD,SAASie,EAA2BC,GACnC,OAAO,WAA0C,IAAzCC,EAAa3rB,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,KAAM+L,EAAO/L,UAAAnB,OAAA,QAAAuB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,KAEvC,KAAK4rB,EAAAA,EAAAA,gBAAeD,GAAgB,CACnC,IAAM3oB,EAAO2oB,EAIb,OAHAD,EAAK1oB,EAAM+I,GAGJ/I,C,CAMR,IAAM6oB,EAA+BF,GA/BvC,SAA0CE,GAGzC,GAA4B,kBAAjBA,EAAQnZ,KAAnB,CAIA,IAAMoZ,EACLD,EAASnZ,KAAaoZ,aAAeD,EAAQnZ,KAAKjS,MAAQ,gBAE3D,MAAM,IAAIJ,MACT,uEAAsE,uBAAA0D,OAC9C+nB,EAAW,qCAClC,uC,EAmBDC,CAAiCF,GAGjC,IAAMzhB,EAAM2B,EAAU,SAAC/I,GAAa,OAAK0oB,EAAK1oB,EAAM+I,EAAQ,EAAG2f,EAC/D,OA8BF,SAAsBG,EAAcG,GACnC,IAAMC,EAAcJ,EAAQzhB,IAQ5B,OAPAxK,EAAAA,EAAAA,GACwB,kBAAhBqsB,EACP,mOAKIA,GAMGC,EAAAA,EAAAA,cAAaL,EAAS,CAC5BzhB,IAAK,SAACpH,GACLmpB,EAAOF,EAAajpB,GACpBmpB,EAAOH,EAAQhpB,E,KAPVkpB,EAAAA,EAAAA,cAAaL,EAAS,CAC5BzhB,IAAK4hB,G,CA1CCI,CAAaP,EAASzhB,E,EAIxB,SAASob,EAAmBJ,GAClC,IAAMiH,EAAoB,CAAC,EAc3B,OAZA/sB,OAAOP,KAAKqmB,GAAOxiB,SAAQ,SAACjD,GAC3B,IAAM+rB,EAAOtG,EAAMzlB,GAGnB,GAAIA,EAAI2sB,SAAS,OAChBD,EAAa1sB,GAAOylB,EAAMzlB,OACpB,CACN,IAAM4sB,EAAcd,EAA2BC,GAC/CW,EAAa1sB,GAAO,kBAAM4sB,CAAW,C,KAIhCF,C,CAGR,SAASF,EAAO/hB,EAAUpH,GACN,oBAARoH,EACVA,EAAIpH,GAEJoH,EAAIod,QAAUxkB,C","sources":["../node_modules/fast-deep-equal/index.js","../node_modules/@react-dnd/invariant/src/index.ts","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts","../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts","../node_modules/react-dnd-html5-backend/src/NativeTypes.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts","../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts","../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts","../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts","../node_modules/react-dnd-html5-backend/src/OptionsReader.ts","../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts","../node_modules/react-dnd-html5-backend/src/index.ts","../node_modules/react-dnd/src/core/DndContext.ts","../node_modules/redux/es/redux.js","../node_modules/dnd-core/src/utils/js_utils.ts","../node_modules/dnd-core/src/actions/dragDrop/types.ts","../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts","../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts","../node_modules/dnd-core/src/actions/dragDrop/drop.ts","../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts","../node_modules/dnd-core/src/utils/matchesType.ts","../node_modules/dnd-core/src/actions/dragDrop/hover.ts","../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts","../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts","../node_modules/dnd-core/src/actions/dragDrop/index.ts","../node_modules/dnd-core/src/utils/coords.ts","../node_modules/dnd-core/src/utils/dirtiness.ts","../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts","../node_modules/@react-dnd/asap/src/makeRequestCall.ts","../node_modules/@react-dnd/asap/src/AsapQueue.ts","../node_modules/@react-dnd/asap/src/RawTask.ts","../node_modules/@react-dnd/asap/src/TaskFactory.ts","../node_modules/@react-dnd/asap/src/asap.ts","../node_modules/dnd-core/src/actions/registry.ts","../node_modules/dnd-core/src/interfaces.ts","../node_modules/dnd-core/src/contracts.ts","../node_modules/dnd-core/src/utils/getNextUniqueId.ts","../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts","../node_modules/dnd-core/src/utils/equality.ts","../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts","../node_modules/dnd-core/src/reducers/dragOffset.ts","../node_modules/dnd-core/src/reducers/dragOperation.ts","../node_modules/dnd-core/src/reducers/refCount.ts","../node_modules/dnd-core/src/reducers/stateId.ts","../node_modules/dnd-core/src/reducers/index.ts","../node_modules/dnd-core/src/createDragDropManager.ts","../node_modules/react-dnd/src/core/DndProvider.tsx","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n","import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n","import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n","export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n","export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n","import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n","import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n","import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n","export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n","import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n","import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n","import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n","import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n","import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n","import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n","import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n","import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n","import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n","import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n","import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n","import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n","export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n","let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n","import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n","import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n","import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","invariant","condition","format","_len","arguments","args","_key","process","undefined","Error","error","argIndex","replace","name","framesToPop","shallowEqual","objA","objB","compare","compareContext","compareResult","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","memoize","fn","result","EnterLeaveCounter","isNodeInDocument","_classCallCheck","entered","this","_createClass","value","enteringNode","_this","previousLength","itemsA","itemsB","set","Set","insertItem","item","add","forEach","push","union","filter","node","contains","leavingNode","items","NativeDragSource","config","initializeExposedProperties","exposeProperties","property","defineProperty","configurable","enumerable","get","console","warn","concat","dataTransfer","_this2","newProperties","propertyFn","matchesTypes","defineProperties","monitor","handle","getSourceId","FILE","URL","TEXT","HTML","getDataFromDataTransfer","typesToTry","defaultValue","reduce","resultSoFar","typeToTry","getData","nativeTypesConfig","_nativeTypesConfig","_defineProperty","NativeTypes","files","slice","html","urls","split","text","matchNativeItemType","dataTransferTypes","types","nativeItemType","typeConfig","some","t","indexOf","isFirefox","test","navigator","userAgent","isSafari","Boolean","window","safari","MonotonicInterpolant","xs","ys","indexes","sort","dx","dy","dys","dxs","ms","i1","c1s","i2","m2","mNext","dxNext","common","m","c2s","c3s","i3","c1","invDx","x","mid","low","high","xHere","Math","floor","diff","max","diffSq","ELEMENT_NODE","getNodeClientOffset","el","nodeType","parentElement","_el$getBoundingClient","getBoundingClientRect","top","left","y","getEventClientOffset","e","clientX","clientY","getDragPreviewOffset","sourceNode","dragPreview","clientOffset","anchorPoint","offsetPoint","isImage","ref","nodeName","document","documentElement","isImageNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","sourceWidth","offsetWidth","sourceHeight","offsetHeight","anchorX","anchorY","_getDragPreviewSize","dragPreviewWidth","width","dragPreviewHeight","height","devicePixelRatio","getDragPreviewSize","offsetX","offsetY","isManualOffsetY","interpolate","calculateYOffset","OptionsReader","globalContext","options","ownerDocument","optionsArgs","rootElement","obj","HTML5BackendImpl","manager","sourcePreviewNodes","Map","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","lastClientOffset","hoverRafId","getSourceClientOffset","sourceId","endDragNativeItem","isDraggingNativeItem","actions","endDrag","registry","removeSource","body","endDragIfSourceWasRemovedFromDOM","clearCurrentDragSourceNode","isDragging","cancelHover","scheduleHover","requestAnimationFrame","hover","cancelAnimationFrame","handleTopDragStartCapture","handleTopDragStart","defaultPrevented","beginDrag","publishSource","nativeType","setDragImage","_this$getCurrentSourc","getCurrentSourcePreviewNodeOptions","dragPreviewOffset","setData","err","setCurrentDragSourceNode","target","captureDraggingState","publishDragSource","setTimeout","beginDragNativeItem","hasAttribute","preventDefault","handleTopDragEndCapture","handleTopDragEnterCapture","loadDataTransfer","enterLeaveCounter","enter","handleTopDragEnter","altKey","targetId","canDropOnTarget","dropEffect","getCurrentDropEffect","handleTopDragOverCapture","handleTopDragOver","handleTopDragLeaveCapture","leave","handleTopDropCapture","reset","handleTopDrop","drop","handleSelectStart","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","ref1","size","root","__isReactDndBackendSetUp","addEventListeners","removeEventListeners","delete","_this3","handleDragStart","setAttribute","addEventListener","removeEventListener","_this4","handleDragEnter","handleDragOver","handleDrop","_objectSpread","getCurrentSourceNodeOptions","itemType","getItemType","type","createNativeDragSource","addSource","_this5","clearTimeout","unshift","_e","HTML5Backend","context","DndContext","createContext","dragDropManager","formatProdErrorMessage","code","$$observable","Symbol","observable","randomString","random","substring","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","index","splice","dispatch","action","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","next","unsubscribe","isObject","input","INIT_COORDS","BEGIN_DRAG","PUBLISH_DRAG_SOURCE","HOVER","DROP","END_DRAG","setClientOffset","sourceClientOffset","payload","ResetCoordinatesAction","createBeginDrag","sourceIds","_options$publishSourc","getSource","verifyInvariants","canDragSource","getDraggableSource","verifyGetSourceClientOffsetIsFunction","verifyItemIsObject","pinSource","getSourceType","isSourcePublic","createDrop","didDrop","targetIds","getTargetIds","reverse","getDroppableTargets","dropResult","getTarget","verifyDropResultType","getDropResult","determineDropResult","createEndDrag","verifyIsDragging","unpinSource","matchesType","targetType","draggedItemType","createHover","targetIdsArg","verifyTargetIdsIsArray","getTargetType","removeNonMatchingTargetIds","lastIndexOf","checkInvariants","hoverAllTargets","createPublishDragSource","DragDropManagerImpl","store","isSetUp","handleRefCountChange","shouldSetUp","refCount","backend","setup","teardown","createDragDropActions","boundActions","actionCreator","apply","subtract","NONE","ALL","__IS_NONE__","__IS_ALL__","DragDropMonitorImpl","handlerIds","prevStateId","stateId","state","currentStateId","canSkipListener","dirtyIds","areDirty","dirtyHandlerIds","previousState","dragOffset","nextState","canDrag","canDrop","shallow","dragOperation","initialClientOffset","initialSourceClientOffset","getDifferenceFromInitialOffset","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","makeRequestCall","toggle","createTextNode","observe","characterData","data","AsapQueue","queue","pendingErrors","flushing","capacity","flush","q","currentIndex","scan","newLength","registerPendingError","requestErrorThrow","requestFlush","shift","task","RawTask","onError","release","TaskFactory","freeTasks","tasks","t1","pop","asapQueue","taskFactory","HandlerRole","ADD_SOURCE","ADD_TARGET","REMOVE_SOURCE","REMOVE_TARGET","validateType","allowArray","nextUniqueId","getNextHandlerId","role","id","SOURCE","TARGET","parseRoleFromHandlerId","handlerId","mapContainsValue","map","searchValue","entries","isDone","_entries$next","done","_slicedToArray","HandlerRegistryImpl","dragSources","dropTargets","pinnedSourceId","pinnedSource","validateSourceContract","addHandler","validateTargetContract","addTarget","handler","includePinned","isSourceId","isTargetId","enqueueTask","create","removeTarget","strictEquality","_action$payload","_action$payload$targe","_action$payload$prevT","prevTargetIds","has","count","xor","didChange","isEqual","areArraysEqual","prevInnermostTargetId","innermostTargetId","initialState","offsetA","offsetB","path","c","createDragDropManager","backendFactory","backendOptions","debugMode","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","instanceId","makeStoreInstance","receiveBackend","_objectWithoutProperties","excluded","INSTANCE_SYM","for","DndProvider","memo","_param","children","_getDndContextValue","props","getGlobalContext","ctx","createSingletonDndContext","isGlobalInstance","getDndContextValue","_getDndContextValue2","useEffect","_jsx","useMonitorOutput","collect","onCollect","_useCollector","onUpdate","_useState","useState","_useState2","collected","setCollected","updateCollected","useCallback","nextValue","useIsomorphicLayoutEffect","useCollector","_useCollector2","getHandlerId","subscribeToStateChange","useCollectedProps","collector","connector","reconnect","useDragDropManager","useContext","useConnectDragSource","useMemo","hooks","dragSource","useConnectDragPreview","SourceConnector","wrapConnectorHooks","clearDragSource","dragSourceOptions","isRef","dragSourceRef","dragSourceNode","reconnectDragSource","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","newHandlerId","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","current","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","internalMonitor","isDraggingSource","isOverTarget","subscribeToOffsetChange","getItem","getInitialClientOffset","getInitialSourceClientOffset","getClientOffset","DragSourceImpl","spec","globalMonitor","end","useRegisteredDragSource","useDragSource","useDragType","_registerSource","registerSource","_registerSource2","unregister","receiveHandlerId","useDrag","specArg","deps","useOptionalFactory","begin","useDragSourceMonitor","getBackend","useDragSourceConnector","previewOptions","useConnectDropTarget","dropTarget","TargetConnector","clearDropTarget","dropTargetOptions","dropTargetRef","dropTargetNode","dropTargetOptionsInternal","lastConnectedDropTarget","lastConnectedDropTargetOptions","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","isCallingCanDrop","DropTargetMonitorImpl","DropTargetImpl","useRegisteredDropTarget","useDropTarget","accept","useAccept","_registerTarget","registerTarget","_registerTarget2","useDrop","useDropTargetMonitor","useDropTargetConnector","useLayoutEffect","arg","memoDeps","_toConsumableArray","wrapHookToRecognizeElement","hook","elementOrNode","isValidElement","element","displayName","throwIfCompositeComponentElement","newRef","previousRef","cloneElement","setRef","cloneWithRef","wrappedHooks","endsWith","wrappedHook"],"sourceRoot":""}